{"version":3,"sources":["lib/Storage.js","components/Drop.js","components/Node.js","lib/Query.js","components/Event.js","components/Setting.js","lib/SubmissionsApi.js","components/App.js","serviceWorker.js","index.js"],"names":["Storage","eventUid","eventNodeUid","key","makeNodeSessionKey","window","localStorage","removeItem","nodeSession","getItem","JSON","parse","dropUid","dropQuantity","getNodeSession","defaultNodeDrop","uid","quantity","count","ignored","nodeDrop","filter","shift","undefined","submitterName","submission","submissionsRaw","submissions","push","setItem","stringify","filteredSession","sessionNodeDrop","name","Drop","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","increment","interval","intervalSkips","iterator","pointerLeash","pointerX","pointerY","running","timer","windowLeash","windowListener","windowPosition","state","getSessionNodeDrop","event_uid","event_node_uid","_this2","DropIcon","react_default","a","createElement","className","draggable","src","drop","image","alt","onMouseDown","e","startIncrement","onMouseMove","checkMouseMove","onMouseOut","stopIncrement","onMouseUp","doMouseUp","DropIndicator","DropQuantity","DropInput","Form_default","Control","type","value","onChange","changeCount","DropDecrement","Button_default","variant","block","size","index_es","icon","event","setCount","target","x","clientX","y","clientY","w","Math","abs","h","amount","setSessionNodeDrop","setState","t","setInterval","scrollY","addEventListener","clearInterval","removeEventListener","React","Component","Node","dropRefs","onClick","submit","renderDrops","_this3","nodeDrops","map","i","drops","src_components_Drop","ref","input","payload","node","submitter","getSubmitterName","getState","queueSubmission","clearNodeSession","forEach","Query","param","urlParams","has","get","params","set","delete","update","toString","query","newurl","location","protocol","host","pathname","history","replaceState","path","URLSearchParams","search","Event","selectNode","bind","assertThisInitialized","extractNode","getNode","nodes","pop","node_drops","sort","b","dropUids","unique","indexOf","selectedNode","renderNodeSelector","renderNode","src_components_Node","options","concat","as","setNode","Setting","show","submitter_name","Modal_default","onHide","handleClose","Header","closeButton","Title","Body","Group","controlId","Label","setSubmitterName","hostname","XMLHttpRequest","require","SubmissionsApi","callback","xhr","onload","responseText","open","send","App","selectEvent","isLoadingEvents","isLoadingEvent","eventsData","eventData","selectedEvent","getEvent","getEvents","events","href","setting","toggle","renderEventSelector","renderEvent","components_Setting","refreshSettings","src_components_Event","selected","setEvent","isLocalhost","Boolean","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","library","add","faCog","faCopy","faMinus","faTrashAlt","ReactDOM","render","src_components_App","document","getElementById","URL","process","origin","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a180b780.chunk.js","sourcesContent":["class Storage {\n\n    static clearNodeSession(eventUid, eventNodeUid) {\n        let key = Storage.makeNodeSessionKey(eventUid, eventNodeUid);\n\n        window.localStorage.removeItem(key);\n    }\n\n    static getNodeSession(eventUid, eventNodeUid) {\n        let key = Storage.makeNodeSessionKey(eventUid, eventNodeUid),\n            nodeSession = window.localStorage.getItem(key);\n\n        if (nodeSession === null)\n            return [];\n\n        return JSON.parse(nodeSession);\n    }\n\n    static getSessionNodeDrop(eventUid, eventNodeUid, dropUid, dropQuantity) {\n        let nodeSession = Storage.getNodeSession(eventUid, eventNodeUid),\n            defaultNodeDrop = {\n                uid: dropUid,\n                quantity: dropQuantity,\n                count: 0,\n                ignored: false\n            };\n\n        let nodeDrop = nodeSession.filter(nodeDrop => {\n            return nodeDrop.uid === dropUid\n                && nodeDrop.quantity === dropQuantity;\n        }).shift();\n\n        if (nodeDrop === undefined)\n            return defaultNodeDrop;\n\n        return nodeDrop;\n    }\n\n    static getSubmitterName() {\n        let submitterName = window.localStorage.getItem(\"submitter_name\");\n\n        return submitterName === null ? \"\" : submitterName;\n    }\n\n    static makeNodeSessionKey(eventUid, eventNodeUid) {\n        return \"event_\" + eventUid + \"_node_\" + eventNodeUid;\n    }\n\n    static queueSubmission(submission) {\n        let submissionsRaw = window.localStorage.getItem(\"submissions\"),\n            submissions = submissionsRaw === null ? [] : JSON.parse(submissionsRaw);\n\n        submissions.push(submission);\n\n        window.localStorage.setItem(\"submissions\", JSON.stringify(submissions));\n    }\n\n    static setSessionNodeDrop(eventUid, eventNodeUid, dropUid, dropQuantity, count, ignored) {\n        let key = Storage.makeNodeSessionKey(eventUid, eventNodeUid),\n            nodeSession = Storage.getNodeSession(eventUid, eventNodeUid),\n            filteredSession = nodeSession.filter(sessionNodeDrop => {\n                return sessionNodeDrop.uid !== dropUid\n                    || sessionNodeDrop.quantity !== dropQuantity;\n            });\n\n        filteredSession.push({\n            uid: dropUid,\n            quantity: dropQuantity,\n            count: count,\n            ignored: ignored\n        });\n\n        window.localStorage.setItem(key, JSON.stringify(filteredSession));\n    }\n\n    static setSubmitterName(name) {\n        window.localStorage.setItem(\"submitter_name\", name);\n    }\n}\n\nexport default Storage;","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport Storage from \"../lib/Storage\";\nimport \"./Drop.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Drop extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.increment = {\n            interval: 250,\n            intervalSkips: 3,\n            iterator: 0,\n            pointerLeash: 10,\n            pointerX: null,\n            pointerY: null,\n            running: false,\n            timer: null,\n            windowLeash: 10,\n            windowListener: null,\n            windowPosition: null\n        };\n        this.state = Storage.getSessionNodeDrop(\n            props.nodeDrop.event_uid,\n            props.nodeDrop.event_node_uid,\n            props.nodeDrop.uid,\n            props.nodeDrop.quantity\n        );\n    }\n\n    render() {\n        let DropIcon = (\n                <img className=\"DropIcon\" draggable=\"false\"\n                     src={this.props.drop.image}\n                     alt={this.props.drop.name}\n                     onMouseDown={(e) => this.startIncrement(e, 1)}\n                     onMouseMove={(e) => this.checkMouseMove(e)}\n                     onMouseOut={(e) => this.stopIncrement()}\n                     onMouseUp={(e) => this.doMouseUp(1)}/>\n            ),\n            DropIndicator = <span className=\"DropIndicator\">+</span>,\n            DropQuantity = (\n                this.props.nodeDrop.quantity > 1\n                    ? <span className=\"DropQuantity\">{this.props.nodeDrop.quantity}</span>\n                    : \"\"\n            ),\n            DropInput = (\n                <Form.Control type=\"text\"\n                              className=\"DropInput form-control form-control-sm\"\n                              value={this.state.count}\n                              onChange={(e) => this.changeCount(e)}/>\n            ),\n            DropDecrement = (\n                <Button variant=\"primary\" block size=\"sm\"\n                        className=\"DropDecrement\"\n                        onMouseDown={(e) => this.startIncrement(e, -1)}\n                        onMouseMove={(e) => this.checkMouseMove(e)}\n                        onMouseOut={(e) => this.stopIncrement()}\n                        onMouseUp={(e) => this.doMouseUp(-1)}>\n                    <FontAwesomeIcon icon=\"minus\"/>\n                </Button>\n            );\n\n        return (\n            <div className=\"Drop\">\n                <div className=\"DropBorder\">\n                    <div className=\"DropContent\">\n                        <div className=\"DropIconBox\">\n                            {DropIcon}\n                            {DropIndicator}\n                            {DropQuantity}\n                        </div>\n                        {DropInput}\n                        {DropDecrement}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    changeCount(event) {\n        this.setCount(event.target.value);\n    }\n\n    checkMouseMove(e) {\n        if (!this.increment.running)\n            return;\n\n        let x = e.clientX,\n            y = e.clientY,\n            w = Math.abs(x - this.increment.pointerX),\n            h = Math.abs(y - this.increment.pointerY);\n\n        if (w > this.increment.pointerLeash || h > this.increment.pointerLeash)\n            this.stopIncrement();\n    }\n\n    doMouseUp(amount) {\n        if (!this.increment.running)\n            return;\n\n        if (this.increment.iterator <= this.increment.intervalSkips)\n            this.setCount(this.state.count + amount);\n\n        this.stopIncrement();\n    }\n\n    getState() {\n        return this.state;\n    }\n\n    setCount(value) {\n        Storage.setSessionNodeDrop(\n            this.props.nodeDrop.event_uid,\n            this.props.nodeDrop.event_node_uid,\n            this.props.nodeDrop.uid,\n            this.props.nodeDrop.quantity,\n            value,\n            false\n        );\n\n        this.setState(Storage.getSessionNodeDrop(\n            this.props.nodeDrop.event_uid,\n            this.props.nodeDrop.event_node_uid,\n            this.props.nodeDrop.uid,\n            this.props.nodeDrop.quantity\n        ));\n    }\n\n    startIncrement(e, amount) {\n        this.stopIncrement();\n\n        let t = this;\n        this.increment.iterator = 0;\n        this.increment.pointerX = e.clientX;\n        this.increment.pointerY = e.clientY;\n\n        this.increment.timer = setInterval(function () {\n            if (t.increment.iterator > t.increment.intervalSkips)\n                t.setCount(t.state.count + amount);\n\n            t.increment.iterator++;\n        }, this.increment.interval);\n        this.increment.windowPosition = window.scrollY;\n        this.increment.windowListener = function (e) {\n            let diff = Math.abs(window.scrollY - t.increment.windowPosition);\n\n            if (diff > t.increment.windowLeash)\n                t.stopIncrement();\n        };\n        window.addEventListener(\"scroll\", this.increment.windowListener);\n        this.increment.running = true;\n    }\n\n    stopIncrement() {\n        if (!this.increment.running)\n            return;\n\n        clearInterval(this.increment.timer);\n        window.removeEventListener(\"scroll\", this.increment.windowListener);\n        this.increment.timer = null;\n        this.increment.windowListener = null;\n        this.increment.running = false;\n    }\n}\n\nexport default Drop;","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport Drop from \"./Drop\";\nimport \"./Node.css\";\nimport Storage from \"../lib/Storage\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Node extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dropRefs = [];\n    }\n\n    render() {\n        return (\n            <div className=\"Node\">\n                <Button variant=\"success\" block onClick={(e) => this.submit()}>\n                    <FontAwesomeIcon icon=\"copy\"/> Submit Run\n                </Button>\n                <div className=\"DropsContainer\">\n                    {this.renderDrops()}\n                </div>\n                <Button variant=\"success\" block onClick={(e) => this.submit()}>\n                    <FontAwesomeIcon icon=\"copy\"/> Submit Run\n                </Button>\n                <Button variant=\"danger\" block>\n                    <FontAwesomeIcon icon=\"trash-alt\"/> Reset Current Run\n                </Button>\n            </div>\n        );\n    }\n\n    renderDrops() {\n        return this.props.nodeDrops.map((nodeDrop, i) => {\n            let drop = this.props.drops.filter(drop => {\n                    return drop.uid === nodeDrop.uid;\n                }).shift();\n\n            return <Drop key={i}\n                         nodeDrop={nodeDrop} drop={drop}\n                         ref={input => {\n                             this.dropRefs.push(input);\n                         }}/>\n        });\n    }\n\n    submit() {\n        let payload = {\n            event_uid: this.props.node.event_uid,\n            event_node_uid: this.props.node.uid,\n            submitter: Storage.getSubmitterName(),\n            drops: this.dropRefs.map(drop => {\n                return drop.getState();\n            })\n        };\n\n        Storage.queueSubmission(payload);\n        Storage.clearNodeSession(this.props.node.event_uid, this.props.node.uid);\n        this.dropRefs.forEach(drop => {\n            drop.setCount(0);\n        });\n    }\n}\n\nexport default Node;","class Query {\n\n    static get(param) {\n        return Query.urlParams().has(param) ? Query.urlParams().get(param) : \"\";\n    }\n\n    static getEvent() {\n        return Query.get(\"event\");\n    }\n\n    static getNode() {\n        return Query.get(\"node\");\n    }\n\n    static setEvent(uid) {\n        let params = Query.urlParams();\n        params.set(\"event\", uid);\n        params.delete(\"node\");\n        Query.update(\"?\" + params.toString());\n    }\n\n    static setNode(uid) {\n        let params = Query.urlParams();\n        params.set(\"node\", uid);\n        Query.update(\"?\" + params.toString());\n    }\n\n    static update(query) {\n        let newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname + query;\n        window.history.replaceState({path: newurl}, '', newurl);\n    }\n\n    static urlParams() {\n        return new URLSearchParams(window.location.search);\n    }\n\n}\n\nexport default Query;","import unique from \"array-unique\";\nimport React from 'react';\nimport Node from \"./Node\";\nimport Query from \"../lib/Query\";\nimport \"./Event.css\";\nimport Form from \"react-bootstrap/Form\";\n\nclass Event extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.selectNode = this.selectNode.bind(this);\n\n        this.state = this.extractNode(Query.getNode());\n    }\n\n    extractNode(uid) {\n        let node = this.props.event.nodes.filter(node => {\n                return node.uid === uid;\n            }).pop(),\n            nodeDrops = this.props.event.node_drops.filter(drop => {\n                return drop.event_node_uid === uid;\n            }).sort(((a, b) => {\n                return a.sort - b.sort;\n            })),\n            dropUids = unique(nodeDrops.map(drop => {\n                return drop.uid;\n            })),\n            drops = this.props.event.drops.filter(drop => {\n                return dropUids.indexOf(drop.uid) !== -1;\n            });\n\n        return {\n            selectedNode: uid,\n            node: node,\n            nodeDrops: nodeDrops,\n            drops: drops\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"Event\">\n                {this.renderNodeSelector()}\n                {this.renderNode()}\n            </div>\n        );\n    }\n\n    renderNode() {\n        if (!this.state.selectedNode)\n            return;\n\n        return <Node node={this.state.node} nodeDrops={this.state.nodeDrops} drops={this.state.drops}/>\n    }\n\n    renderNodeSelector() {\n        let i = 0,\n            options = [\n                <option key={i++} value={\"\"}>Select a node</option>\n            ].concat(this.props.event.nodes.map(node => {\n                return <option key={i++} value={node.uid}>{node.name}</option>\n            }));\n\n        return (\n            <Form.Control as=\"select\"\n                          className=\"NodeSelector custom-select\"\n                          onChange={this.selectNode}\n                          value={this.state.selectedNode}>\n                {options}\n            </Form.Control>\n        );\n    }\n\n    selectNode(event) {\n        let uid = event.target.value;\n        Query.setNode(uid);\n\n        this.setState(this.extractNode(uid));\n    }\n}\n\nexport default Event;","import React from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Storage from \"../lib/Storage\";\n\nclass Setting extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: false,\n            submitter_name: Storage.getSubmitterName()\n        };\n    }\n\n    render() {\n        return (\n            <Modal show={this.state.show} onHide={e => this.handleClose()}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Settings</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group controlId=\"settingSubmitterName\">\n                        <Form.Label>Submitter Name</Form.Label>\n                        <Form.Control value={this.state.submitter_name}\n                                      onChange={e => this.setSubmitterName(e.target.value)}/>\n                    </Form.Group>\n                </Modal.Body>\n            </Modal>\n        )\n    }\n\n    handleClose() {\n        this.setState({ show: false });\n    }\n\n    setSubmitterName(name) {\n        Storage.setSubmitterName(name);\n        this.setState({\n            \"submitter_name\": Storage.getSubmitterName()\n        });\n    }\n\n    toggle() {\n        this.setState({\n            show: !this.state.show\n        });\n    }\n}\n\nexport default Setting;\n","const hostname = \"https://submissions.atlasacademy.io\";\nconst XMLHttpRequest = require(\"xmlhttprequest-ssl\").XMLHttpRequest;\n\nclass SubmissionsApi {\n\n    static getEvents(callback) {\n        let xhr = new XMLHttpRequest();\n        xhr.onload = function () {\n            callback(JSON.parse(xhr.responseText));\n        };\n        xhr.open(\"GET\", hostname + \"/event\");\n        xhr.send();\n    }\n\n    static getEvent(uid, callback) {\n        let xhr = new XMLHttpRequest();\n        xhr.onload = function () {\n            callback(JSON.parse(xhr.responseText));\n        };\n        xhr.open(\"GET\", hostname + \"/event/\" + uid);\n        xhr.send();\n    }\n\n}\n\nexport default SubmissionsApi;","import React, {Component} from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Event from \"./Event\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Form from \"react-bootstrap/Form\";\nimport Query from \"../lib/Query\";\nimport Setting from \"./Setting\";\nimport SubmissionsApi from \"../lib/SubmissionsApi\";\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.selectEvent = this.selectEvent.bind(this);\n\n        this.state = {\n            isLoadingEvents: true,\n            isLoadingEvent: true,\n            eventsData: [],\n            eventData: [],\n            selectedEvent: Query.getEvent()\n        };\n\n        SubmissionsApi.getEvents(events => {\n            this.setState({\n                isLoadingEvents: false,\n                eventsData: events\n            });\n\n            if (this.state.selectedEvent) {\n                SubmissionsApi.getEvent(this.state.selectedEvent, event => {\n                    this.setState({\n                        isLoadingEvent: false,\n                        eventData: event\n                    });\n                });\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"AppTitle\">\n                    <h1>\n                        Drop Serializer\n                        <small>by <a href=\"https://discord.gg/TKJmuCR\">Atlas Academy</a></small>\n                    </h1>\n                    <Button variant=\"info\" className=\"AppSettingsToggle\"\n                            onClick={e => this.setting.toggle()}>\n                        <FontAwesomeIcon icon=\"cog\"/>\n                    </Button>\n                </div>\n\n                {this.renderEventSelector()}\n                {this.renderEvent()}\n                <Setting ref={(input) => {\n                    this.setting = input;\n                }} onChange={() => {\n                    this.refreshSettings();\n                }}/>\n            </div>\n        );\n    }\n\n    renderEvent() {\n        if (this.state.isLoadingEvent || !this.state.selectedEvent)\n            return;\n\n        return <Event event={this.state.eventData} selected={this.state.selectedEvent}/>;\n    }\n\n    renderEventSelector() {\n        if (this.state.isLoadingEvents)\n            return;\n\n        let i = 0,\n            options = [\n                <option key={i++} value={\"\"}>Select a event</option>\n            ].concat(this.state.eventsData.map(event => {\n                return <option key={i++} value={event.uid}>{event.name}</option>\n            }));\n\n        return (\n            <Form.Control as=\"select\"\n                          className=\"EventSelector\"\n                          onChange={this.selectEvent}\n                          value={this.state.selectedEvent}>\n                {options}\n            </Form.Control>\n        );\n    }\n\n    refreshSettings() {\n\n    }\n\n    selectEvent(event) {\n        let uid = event.target.value;\n\n        Query.setEvent(uid);\n        this.setState({\n            isLoadingEvent: true,\n            eventData: null,\n            selectedEvent: uid\n        });\n\n        if (!uid)\n            return;\n\n        SubmissionsApi.getEvent(uid, event => {\n            this.setState({\n                isLoadingEvent: false,\n                eventData: event\n            });\n        })\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faCog, faCopy, faMinus, faTrashAlt} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faCog);\nlibrary.add(faCopy);\nlibrary.add(faMinus);\nlibrary.add(faTrashAlt);\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}