{"version":3,"sources":["lib/Messages.js","components/Alerts.js","lib/Storage.js","components/Drop.js","lib/SubmissionsApi.js","lib/SubmissionsQueue.js","components/Node.js","lib/Query.js","components/Event.js","components/Setting.js","components/App.js","serviceWorker.js","index.js"],"names":["listener","Messages","type","message","callback","Alerts","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","alerts","push","bind","assertThisInitialized","registerListener","map","alert","key","react_default","a","createElement","Alert_default","variant","className","_this2","JSON","parse","stringify","setState","setTimeout","shiftAlerts","slice","Component","Storage","eventUid","eventNodeUid","makeNodeSessionKey","window","localStorage","removeItem","submissions","getSubmissions","length","shift","nodeSession","getItem","dropUid","dropQuantity","getNodeSession","defaultNodeDrop","uid","quantity","count","ignored","nodeDrop","filter","undefined","submissionsRaw","submitterName","submission","setItem","filteredSession","sessionNodeDrop","name","Drop","increment","interval","intervalSkips","iterator","pointerLeash","pointerX","pointerY","running","timer","windowLeash","windowListener","windowPosition","sessionDrop","getSessionNodeDrop","event_uid","event_node_uid","showFilter","active","DropIcon","draggable","src","drop","image","alt","onMouseDown","e","startIncrement","onMouseMove","checkMouseMove","onMouseOut","stopIncrement","onMouseUp","doMouseUp","DropIndicator","DropQuantity","DropInput","Form_default","Control","value","onChange","changeCount","DropDecrement","Button_default","block","size","index_es","icon","DropToggle","onClick","toggleIgnored","event","setCount","target","x","clientX","y","clientY","w","Math","abs","h","amount","_this3","doIncrement","parseInt","isNaN","setSessionNodeDrop","t","setInterval","scrollY","addEventListener","clearInterval","removeEventListener","React","hostname","XMLHttpRequest","require","SubmissionsApi","xhr","onload","submittableEvents","responseText","submittable","open","send","successCallback","failureCallback","urlEncodedData","urlEncodedDataPairs","encodeURIComponent","submitter","drops","forEach","field","Number","join","replace","result","onerror","setRequestHeader","pending","SubmissionsQueue","getNextSubmission","isMissingDropsCallback","hasQueued","queueSubmission","sendNext","success","clearTimeout","postSubmission","receipt","shiftSubmissions","missing_drops","scheduleNext","Node","dropRefs","clickSound","Howl","renderDrops","Row_default","Col_default","toggleFilter","submit","nodeDrops","i","src_components_Drop","notifyClick","ref","input","play","navigator","vibrate","_this4","payload","node","getSubmitterName","getState","onOutdated","clearNodeSession","clearDrops","Query","param","urlParams","has","get","params","set","delete","update","toString","query","newurl","location","protocol","host","pathname","history","replaceState","path","URLSearchParams","search","Event","selectNode","extractNode","getNode","nodes","pop","node_drops","sort","b","dropUids","unique","indexOf","selectedNode","renderNodeSelector","renderNode","src_components_Node","options","concat","as","setNode","Setting","show","submitter_name","Modal_default","onHide","handleClose","Header","closeButton","Title","Body","Group","controlId","Label","setSubmitterName","submitterInput","focus","App","selectEvent","isLoadingEvents","isLoadingEvent","eventsData","eventData","selectedEvent","getEvent","getEvents","events","href","setting","toggle","rel","src_components_Alerts","renderEventSelector","renderEvent","renderSettings","renderLoading","src_components_Event","selected","reloadEvent","spin","_this5","components_Setting","refreshSettings","_this6","setEvent","Boolean","match","library","add","faBan","faCheck","faCog","faCopy","faFilter","faMinus","faSpinner","faTrashAlt","faDiscord","faGithub","ReactDOM","render","src_components_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.811f33c2.chunk.js","sourcesContent":["let listener;\n\nclass Messages {\n\n    static push(type, message) {\n        listener(type, message);\n    }\n\n    static registerListener(callback) {\n        listener = callback;\n    }\n\n}\n\nexport default Messages;","import React, {Component} from 'react';\nimport Alert from \"react-bootstrap/Alert\";\nimport \"./Alerts.css\";\nimport Messages from \"../lib/Messages\";\n\nclass Alerts extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            alerts: []\n        };\n\n        this.push = this.push.bind(this);\n        Messages.registerListener(this.push);\n    }\n\n    render() {\n        let alerts = this.state.alerts.map((alert, key) => {\n            return <Alert key={key} variant={alert.type}>{alert.message}</Alert>;\n        });\n\n        return (\n            <div className=\"Alerts\">\n                {alerts}\n            </div>\n        );\n    }\n\n    push(type, message) {\n        let alerts = JSON.parse(JSON.stringify(this.state.alerts));\n\n        alerts.push({\n            type: type,\n            message: message\n        });\n\n        this.setState({\n            alerts: alerts\n        });\n\n        setTimeout(() => {\n            this.shiftAlerts();\n        }, 5000);\n    }\n\n    shiftAlerts() {\n        let alerts = JSON.parse(JSON.stringify(this.state.alerts));\n\n        this.setState({\n            alerts: alerts.slice(1)\n        });\n    }\n}\n\nexport default Alerts;\n","class Storage {\n\n    static clearNodeSession(eventUid, eventNodeUid) {\n        let key = Storage.makeNodeSessionKey(eventUid, eventNodeUid);\n\n        window.localStorage.removeItem(key);\n    }\n\n    static getNextSubmission() {\n        let submissions = Storage.getSubmissions();\n\n        if (submissions.length === 0)\n            return null;\n\n        return submissions.shift();\n    }\n\n    static getNodeSession(eventUid, eventNodeUid) {\n        let key = Storage.makeNodeSessionKey(eventUid, eventNodeUid),\n            nodeSession = window.localStorage.getItem(key);\n\n        if (nodeSession === null)\n            return [];\n\n        return JSON.parse(nodeSession);\n    }\n\n    static getSessionNodeDrop(eventUid, eventNodeUid, dropUid, dropQuantity) {\n        let nodeSession = Storage.getNodeSession(eventUid, eventNodeUid),\n            defaultNodeDrop = {\n                uid: dropUid,\n                quantity: dropQuantity,\n                count: 0,\n                ignored: false\n            };\n\n        let nodeDrop = nodeSession.filter(nodeDrop => {\n            return nodeDrop.uid === dropUid\n                && nodeDrop.quantity === dropQuantity;\n        }).shift();\n\n        if (nodeDrop === undefined)\n            return defaultNodeDrop;\n\n        return nodeDrop;\n    }\n\n    static getSubmissions() {\n        let submissionsRaw = window.localStorage.getItem(\"submissions\");\n\n        return submissionsRaw === null ? [] : JSON.parse(submissionsRaw);\n    }\n\n    static getSubmitterName() {\n        let submitterName = window.localStorage.getItem(\"submitter_name\");\n\n        return submitterName === null ? \"\" : submitterName;\n    }\n\n    static makeNodeSessionKey(eventUid, eventNodeUid) {\n        return \"event_\" + eventUid + \"_node_\" + eventNodeUid;\n    }\n\n    static queueSubmission(submission) {\n        let submissions = Storage.getSubmissions();\n\n        submissions.push(submission);\n\n        window.localStorage.setItem(\"submissions\", JSON.stringify(submissions));\n    }\n\n    static setSessionNodeDrop(eventUid, eventNodeUid, dropUid, dropQuantity, count, ignored) {\n        let key = Storage.makeNodeSessionKey(eventUid, eventNodeUid),\n            nodeSession = Storage.getNodeSession(eventUid, eventNodeUid),\n            filteredSession = nodeSession.filter(sessionNodeDrop => {\n                return sessionNodeDrop.uid !== dropUid\n                    || sessionNodeDrop.quantity !== dropQuantity;\n            });\n\n        filteredSession.push({\n            uid: dropUid,\n            quantity: dropQuantity,\n            count: count,\n            ignored: ignored\n        });\n\n        window.localStorage.setItem(key, JSON.stringify(filteredSession));\n    }\n\n    static setSubmitterName(name) {\n        window.localStorage.setItem(\"submitter_name\", name);\n    }\n\n    static shiftSubmissions() {\n        let submissions = Storage.getSubmissions().slice(1);\n\n        window.localStorage.setItem(\"submissions\", JSON.stringify(submissions));\n    }\n\n}\n\nexport default Storage;","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport Storage from \"../lib/Storage\";\nimport \"./Drop.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Drop extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.increment = {\n            interval: 250,\n            intervalSkips: 3,\n            iterator: 0,\n            pointerLeash: 10,\n            pointerX: null,\n            pointerY: null,\n            running: false,\n            timer: null,\n            windowLeash: 10,\n            windowListener: null,\n            windowPosition: null\n        };\n\n        let sessionDrop = Storage.getSessionNodeDrop(\n            props.nodeDrop.event_uid,\n            props.nodeDrop.event_node_uid,\n            props.nodeDrop.uid,\n            props.nodeDrop.quantity\n        );\n\n        sessionDrop.showFilter = false;\n        sessionDrop.active = false;\n\n        this.state = sessionDrop;\n    }\n\n    render() {\n        let ignored = this.state.ignored ? \" ignored\" : \"\",\n            showFilter = this.state.showFilter ? \" showFilter\" : \"\",\n            active = this.state.active ? \" active\" : \"\",\n            DropIcon = (\n                <img className=\"DropIcon\" draggable=\"false\"\n                     src={this.props.drop.image}\n                     alt={this.props.drop.name}\n                     onMouseDown={(e) => this.startIncrement(e, 1)}\n                     onMouseMove={(e) => this.checkMouseMove(e)}\n                     onMouseOut={(e) => this.stopIncrement()}\n                     onMouseUp={(e) => this.doMouseUp(1)}/>\n            ),\n            DropIndicator = <span className=\"DropIndicator\">+</span>,\n            DropQuantity = (\n                this.props.nodeDrop.quantity > 1\n                    ? <span className=\"DropQuantity\">{this.props.nodeDrop.quantity}</span>\n                    : \"\"\n            ),\n            DropInput = (\n                <Form.Control type=\"text\"\n                              className=\"DropInput form-control form-control-sm\"\n                              value={this.state.count}\n                              onChange={(e) => this.changeCount(e)}/>\n            ),\n            DropDecrement = (\n                <Button variant=\"primary\" block size=\"sm\"\n                        className=\"DropDecrement\"\n                        onMouseDown={(e) => this.startIncrement(e, -1)}\n                        onMouseMove={(e) => this.checkMouseMove(e)}\n                        onMouseOut={(e) => this.stopIncrement()}\n                        onMouseUp={(e) => this.doMouseUp(-1)}>\n                    <FontAwesomeIcon icon=\"minus\"/>\n                </Button>\n            ),\n            DropToggle = (\n                <div className=\"DropToggle\" onClick={(e) => this.toggleIgnored()}>\n                    <FontAwesomeIcon className=\"DropToggleIcon\"\n                                     icon={this.state.ignored ? \"ban\" : \"check\"}/>\n                </div>\n            );\n\n        return (\n            <div className={\"Drop\" + ignored + showFilter + active}>\n                <div className=\"DropBorder\">\n                    <div className=\"DropContent\">\n                        <div className=\"DropIconBox\">\n                            {DropIcon}\n                            {DropIndicator}\n                            {DropQuantity}\n                        </div>\n                        {DropInput}\n                        {DropDecrement}\n                    </div>\n                    {DropToggle}\n                </div>\n            </div>\n        );\n    }\n\n    changeCount(event) {\n        this.setCount(event.target.value);\n    }\n\n    checkMouseMove(e) {\n        if (!this.increment.running)\n            return;\n\n        let x = e.clientX,\n            y = e.clientY,\n            w = Math.abs(x - this.increment.pointerX),\n            h = Math.abs(y - this.increment.pointerY);\n\n        if (w > this.increment.pointerLeash || h > this.increment.pointerLeash)\n            this.stopIncrement();\n    }\n\n    doIncrement(amount) {\n        this.setCount(0 + this.state.count + amount);\n\n        this.setState({active: true});\n        setTimeout(() => {\n            this.setState({active: false});\n        }, 50);\n\n        if (this.props.onClick)\n            this.props.onClick();\n    }\n\n    doMouseUp(amount) {\n        if (!this.increment.running)\n            return;\n\n        if (this.increment.iterator <= this.increment.intervalSkips)\n            this.doIncrement(amount);\n\n        this.stopIncrement();\n    }\n\n    getState() {\n        return {\n            uid: this.state.uid,\n            quantity: this.state.quantity,\n            count: this.state.count,\n            ignored: this.state.ignored\n        };\n    }\n\n    setCount(value) {\n        if (typeof value === \"string\" && value !== \"\")\n            value = parseInt(value);\n        if (isNaN(value) || value < 0)\n            value = 0;\n\n        Storage.setSessionNodeDrop(\n            this.props.nodeDrop.event_uid,\n            this.props.nodeDrop.event_node_uid,\n            this.props.nodeDrop.uid,\n            this.props.nodeDrop.quantity,\n            value,\n            this.state.ignored\n        );\n\n        this.setState(Storage.getSessionNodeDrop(\n            this.props.nodeDrop.event_uid,\n            this.props.nodeDrop.event_node_uid,\n            this.props.nodeDrop.uid,\n            this.props.nodeDrop.quantity\n        ));\n    }\n\n    startIncrement(e, amount) {\n        this.stopIncrement();\n\n        let t = this;\n        this.increment.iterator = 0;\n        this.increment.pointerX = e.clientX;\n        this.increment.pointerY = e.clientY;\n\n        this.increment.timer = setInterval(function () {\n            if (t.increment.iterator > t.increment.intervalSkips)\n                t.doIncrement(amount);\n\n            t.increment.iterator++;\n        }, this.increment.interval);\n        this.increment.windowPosition = window.scrollY;\n        this.increment.windowListener = function (e) {\n            let diff = Math.abs(window.scrollY - t.increment.windowPosition);\n\n            if (diff > t.increment.windowLeash)\n                t.stopIncrement();\n        };\n        window.addEventListener(\"scroll\", this.increment.windowListener);\n        this.increment.running = true;\n    }\n\n    stopIncrement() {\n        if (!this.increment.running)\n            return;\n\n        clearInterval(this.increment.timer);\n        window.removeEventListener(\"scroll\", this.increment.windowListener);\n        this.increment.timer = null;\n        this.increment.windowListener = null;\n        this.increment.running = false;\n    }\n\n    toggleFilter() {\n        this.setState({\n            showFilter: !this.state.showFilter\n        });\n    }\n\n    toggleIgnored() {\n        Storage.setSessionNodeDrop(\n            this.props.nodeDrop.event_uid,\n            this.props.nodeDrop.event_node_uid,\n            this.props.nodeDrop.uid,\n            this.props.nodeDrop.quantity,\n            0,\n            !this.state.ignored\n        );\n\n        this.setState(Storage.getSessionNodeDrop(\n            this.props.nodeDrop.event_uid,\n            this.props.nodeDrop.event_node_uid,\n            this.props.nodeDrop.uid,\n            this.props.nodeDrop.quantity\n        ));\n    }\n}\n\nexport default Drop;","const hostname = \"https://submissions.atlasacademy.io\";\n// const hostname = \"http://submissions.test.atlasacademy.io\";\nconst XMLHttpRequest = require(\"xmlhttprequest-ssl\").XMLHttpRequest;\n\nclass SubmissionsApi {\n\n    static getEvents(callback) {\n        let xhr = new XMLHttpRequest();\n        xhr.onload = function () {\n            let events = JSON.parse(xhr.responseText),\n                submittableEvents = events.filter(event => {\n                    return event.submittable;\n                });\n\n            callback(submittableEvents);\n        };\n        xhr.open(\"GET\", hostname + \"/event\");\n        xhr.send();\n    }\n\n    static getEvent(uid, callback) {\n        let xhr = new XMLHttpRequest();\n        xhr.onload = function () {\n            let event = JSON.parse(xhr.responseText);\n\n            if (!event.submittable)\n                return;\n\n            callback(event);\n        };\n        xhr.open(\"GET\", hostname + \"/event/\" + uid);\n        xhr.send();\n    }\n\n    static postSubmission(submission, successCallback, failureCallback) {\n        let xhr = new XMLHttpRequest(),\n            urlEncodedData,\n            urlEncodedDataPairs = [];\n\n        urlEncodedDataPairs.push(encodeURIComponent(\"event_uid\") + '=' + encodeURIComponent(submission.event_uid));\n        urlEncodedDataPairs.push(encodeURIComponent(\"event_node_uid\") + '=' + encodeURIComponent(submission.event_node_uid));\n        urlEncodedDataPairs.push(encodeURIComponent(\"submitter\") + '=' + encodeURIComponent(submission.submitter));\n        submission.drops.forEach((drop, key) => {\n            for (let field in drop) {\n                let value = typeof drop[field] === \"boolean\" ? Number(drop[field]) : encodeURIComponent(drop[field]);\n                urlEncodedDataPairs.push(\n                    encodeURIComponent(\"drops[\" + key + \"][\" + field + \"]\")\n                    + '='\n                    + value\n                );\n            }\n        });\n\n        urlEncodedData = urlEncodedDataPairs.join('&').replace(/%20/g, '+');\n\n        xhr.onload = function () {\n            let result = JSON.parse(xhr.responseText);\n\n            successCallback(result);\n        };\n\n        xhr.onerror = function () {\n            failureCallback();\n        };\n\n        xhr.open(\"POST\", hostname + \"/submit/run\");\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n        xhr.send(urlEncodedData);\n    }\n\n}\n\nexport default SubmissionsApi;","import Storage from \"./Storage\";\nimport SubmissionsApi from \"./SubmissionsApi\";\nimport Messages from \"./Messages\";\n\nconst successDelay = 2500;\nconst failureDelay = 20000;\nlet pending = false,\n    timer = null;\n\nclass SubmissionsQueue {\n\n    static hasQueued() {\n        let submission = Storage.getNextSubmission();\n\n        return submission !== null;\n    }\n\n    static push(submission, isMissingDropsCallback) {\n        let hasQueued = SubmissionsQueue.hasQueued();\n        Storage.queueSubmission(submission);\n\n        if (!hasQueued)\n            SubmissionsQueue.sendNext(isMissingDropsCallback);\n    }\n\n    static scheduleNext(success) {\n        if (pending)\n            return;\n\n        if (!SubmissionsQueue.hasQueued())\n            return;\n\n        pending = true;\n        timer = setTimeout(() => {\n            SubmissionsQueue.sendNext();\n        }, success ? successDelay : failureDelay);\n    }\n\n    static sendNext(isMissingDropsCallback) {\n        if (pending)\n            clearTimeout(timer);\n        pending = false;\n        timer = null;\n\n        let submission = Storage.getNextSubmission();\n\n        if (submission === null) {\n            SubmissionsQueue.scheduleNext(false);\n            return;\n        }\n\n        SubmissionsApi.postSubmission(submission, (result) => {\n            Messages.push(\"success\", \"Created new submission: \" + result.receipt);\n            Storage.shiftSubmissions();\n\n            if (result.missing_drops && isMissingDropsCallback)\n                isMissingDropsCallback();\n\n            SubmissionsQueue.scheduleNext(true);\n        }, () => {\n            SubmissionsQueue.scheduleNext(false);\n        });\n    }\n\n}\n\nexport default SubmissionsQueue;","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport Drop from \"./Drop\";\nimport \"./Node.css\";\nimport Storage from \"../lib/Storage\";\nimport Button from \"react-bootstrap/Button\";\nimport SubmissionsQueue from \"../lib/SubmissionsQueue\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {Howl} from 'howler';\n\nclass Node extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dropRefs = [];\n        this.clickSound = new Howl({\n            src: \"./sounds/click.mp3\"\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"Node\">\n                <div className=\"DropsContainer\">\n                    {this.renderDrops()}\n                </div>\n                <Row>\n                    <Col>\n                        <Button variant=\"primary\" block onClick={(e) => this.toggleFilter()}>\n                            <FontAwesomeIcon icon=\"filter\"/> Toggle Filter\n                        </Button>\n                    </Col>\n                    <Col>\n                        <Button variant=\"success\" block onClick={(e) => this.submit()}>\n                            <FontAwesomeIcon icon=\"copy\"/> Submit Run\n                        </Button>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n    renderDrops() {\n        return this.props.nodeDrops.map((nodeDrop, i) => {\n            let drop = this.props.drops.filter(drop => {\n                    return drop.uid === nodeDrop.uid;\n                }).shift();\n\n            return <Drop key={i}\n                         nodeDrop={nodeDrop}\n                         drop={drop}\n                         onClick={() => {\n                             this.notifyClick();\n                         }}\n                         ref={input => {\n                             this.dropRefs.push(input);\n                         }}/>\n        });\n    }\n\n    clearDrops() {\n        this.dropRefs.forEach(drop => {\n            drop.setCount(0);\n        });\n    }\n\n    notifyClick() {\n        this.clickSound.play();\n        window.navigator.vibrate(100);\n    }\n\n    toggleFilter() {\n        this.dropRefs.forEach(drop => {\n            drop.toggleFilter();\n        });\n    }\n\n    submit() {\n        let payload = {\n            event_uid: this.props.node.event_uid,\n            event_node_uid: this.props.node.uid,\n            submitter: Storage.getSubmitterName(),\n            drops: this.dropRefs.map(drop => {\n                return drop.getState();\n            })\n        };\n\n        SubmissionsQueue.push(payload, () => {\n            if (this.props.onOutdated)\n                this.props.onOutdated();\n        });\n        Storage.clearNodeSession(this.props.node.event_uid, this.props.node.uid);\n        this.clearDrops();\n    }\n}\n\nexport default Node;","class Query {\n\n    static get(param) {\n        return Query.urlParams().has(param) ? Query.urlParams().get(param) : \"\";\n    }\n\n    static getEvent() {\n        return Query.get(\"event\");\n    }\n\n    static getNode() {\n        return Query.get(\"node\");\n    }\n\n    static setEvent(uid) {\n        let params = Query.urlParams();\n\n        if (uid)\n            params.set(\"event\", uid);\n        else\n            params.delete(\"event\");\n\n        params.delete(\"node\");\n        Query.update(\"?\" + params.toString());\n    }\n\n    static setNode(uid) {\n        let params = Query.urlParams();\n\n        if (uid)\n            params.set(\"node\", uid);\n        else\n            params.delete(\"node\");\n\n        Query.update(\"?\" + params.toString());\n    }\n\n    static update(query) {\n        let newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname + query;\n        window.history.replaceState({path: newurl}, '', newurl);\n    }\n\n    static urlParams() {\n        return new URLSearchParams(window.location.search);\n    }\n\n}\n\nexport default Query;","import unique from \"array-unique\";\nimport React from 'react';\nimport Node from \"./Node\";\nimport Query from \"../lib/Query\";\nimport \"./Event.css\";\nimport Form from \"react-bootstrap/Form\";\n\nclass Event extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.selectNode = this.selectNode.bind(this);\n\n        this.state = this.extractNode(Query.getNode());\n    }\n\n    extractNode(uid) {\n        let node = this.props.event.nodes.filter(node => {\n                return node.uid === uid;\n            }).pop(),\n            nodeDrops = this.props.event.node_drops.filter(drop => {\n                return drop.event_node_uid === uid;\n            }).sort(((a, b) => {\n                return a.sort - b.sort;\n            })),\n            dropUids = unique(nodeDrops.map(drop => {\n                return drop.uid;\n            })),\n            drops = this.props.event.drops.filter(drop => {\n                return dropUids.indexOf(drop.uid) !== -1;\n            });\n\n        return {\n            selectedNode: uid,\n            node: node,\n            nodeDrops: nodeDrops,\n            drops: drops\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"Event\">\n                {this.renderNodeSelector()}\n                {this.renderNode()}\n            </div>\n        );\n    }\n\n    renderNode() {\n        if (!this.state.selectedNode)\n            return;\n\n        return <Node node={this.state.node}\n                     nodeDrops={this.state.nodeDrops}\n                     drops={this.state.drops}\n                     onOutdated={this.props.onOutdated}/>\n    }\n\n    renderNodeSelector() {\n        let i = 0,\n            options = [\n                <option key={i++} value={\"\"}>Select a node</option>\n            ].concat(this.props.event.nodes.map(node => {\n                return <option key={i++} value={node.uid}>{node.name}</option>\n            }));\n\n        return (\n            <Form.Control as=\"select\"\n                          className=\"NodeSelector custom-select\"\n                          onChange={this.selectNode}\n                          value={this.state.selectedNode}>\n                {options}\n            </Form.Control>\n        );\n    }\n\n    selectNode(event) {\n        let uid = event.target.value;\n        Query.setNode(uid);\n\n        this.setState(this.extractNode(uid));\n    }\n}\n\nexport default Event;","import React from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Storage from \"../lib/Storage\";\n\nclass Setting extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: !Storage.getSubmitterName(),\n            submitter_name: Storage.getSubmitterName()\n        };\n    }\n\n    render() {\n        return (\n            <Modal show={this.state.show} onHide={e => this.handleClose()}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Settings</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group controlId=\"settingSubmitterName\">\n                        <Form.Label>Submitter Name</Form.Label>\n                        <Form.Control value={this.state.submitter_name}\n                                      onChange={e => this.setSubmitterName(e.target.value)}\n                                      ref={(input) => {\n                                          this.submitterInput = input;\n                                      }}/>\n                    </Form.Group>\n                </Modal.Body>\n            </Modal>\n        )\n    }\n\n    componentDidMount() {\n        if (!Storage.getSubmitterName())\n            this.submitterInput.focus();\n    }\n\n    handleClose() {\n        this.setState({show: false});\n    }\n\n    setSubmitterName(name) {\n        Storage.setSubmitterName(name);\n        this.setState({\n            \"submitter_name\": Storage.getSubmitterName()\n        });\n    }\n\n    toggle() {\n        this.setState({\n            show: !this.state.show\n        });\n    }\n}\n\nexport default Setting;\n","import React, {Component} from 'react';\nimport Alerts from \"./Alerts\";\nimport Button from \"react-bootstrap/Button\";\nimport Event from \"./Event\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Form from \"react-bootstrap/Form\";\nimport Query from \"../lib/Query\";\nimport Setting from \"./Setting\";\nimport SubmissionsApi from \"../lib/SubmissionsApi\";\nimport './App.css';\nimport SubmissionsQueue from \"../lib/SubmissionsQueue\";\nimport Messages from \"../lib/Messages\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.selectEvent = this.selectEvent.bind(this);\n\n        this.state = {\n            isLoadingEvents: true,\n            isLoadingEvent: false,\n            eventsData: [],\n            eventData: null,\n            selectedEvent: Query.getEvent()\n        };\n\n        SubmissionsApi.getEvents(events => {\n            this.setState({\n                isLoadingEvents: false,\n                isLoadingEvent: this.state.selectedEvent.length > 0,\n                eventsData: events\n            });\n\n            if (this.state.selectedEvent.length > 0) {\n                SubmissionsApi.getEvent(this.state.selectedEvent, event => {\n                    this.setState({\n                        isLoadingEvent: false,\n                        eventData: event\n                    });\n                });\n            }\n        });\n\n        SubmissionsQueue.scheduleNext(true);\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"AppTitle\">\n                    <h1>\n                        Drop Serializer\n                        <small>by <a href=\"https://discord.gg/TKJmuCR\">Atlas Academy</a></small>\n                    </h1>\n                    <Button variant=\"primary\" className=\"AppSettingsToggle\"\n                            onClick={e => this.setting.toggle()}>\n                        <FontAwesomeIcon icon=\"cog\"/>\n                    </Button>\n\n                    <div className=\"AppLinks\">\n                        <a href=\"https://github.com/atlasacademy/drop-serializer-react\"\n                           className=\"text-secondary\"\n                           target=\"_blank\" rel=\"noopener noreferrer author\">\n                            <FontAwesomeIcon icon={['fab', 'github']}/>\n                        </a>\n                        <a href=\"https://discord.gg/TKJmuCR\"\n                           className=\"text-secondary\"\n                           target=\"_blank\" rel=\"noopener noreferrer author\">\n                            <FontAwesomeIcon icon={['fab', 'discord']}/>\n                        </a>\n                    </div>\n                </div>\n\n                <Alerts/>\n                {this.renderEventSelector()}\n                {this.renderEvent()}\n                {this.renderSettings()}\n                {this.renderLoading()}\n            </div>\n        );\n    }\n\n    refreshSettings() {\n\n    }\n\n    reloadEvent() {\n        Messages.push(\"warning\", \"Event is outdated. Reloading event.\");\n\n        this.setState({\n            isLoadingEvent: true,\n            eventData: null\n        });\n\n        SubmissionsApi.getEvent(this.state.selectedEvent, event => {\n            this.setState({\n                isLoadingEvent: false,\n                eventData: event\n            });\n        });\n    }\n\n    renderEvent() {\n        if (!this.state.selectedEvent || !this.state.eventData)\n            return;\n\n        return <Event event={this.state.eventData}\n                      selected={this.state.selectedEvent}\n                      onOutdated={() => {\n                          this.reloadEvent();\n                      }}/>;\n    }\n\n    renderEventSelector() {\n        if (this.state.isLoadingEvents)\n            return;\n\n        let i = 0,\n            options = [\n                <option key={i++} value={\"\"}>Select a event</option>\n            ].concat(this.state.eventsData.map(event => {\n                return <option key={i++} value={event.uid}>{event.name}</option>\n            }));\n\n        return (\n            <Form.Control as=\"select\"\n                          className=\"EventSelector\"\n                          onChange={this.selectEvent}\n                          value={this.state.selectedEvent}>\n                {options}\n            </Form.Control>\n        );\n    }\n\n    renderLoading() {\n        if (this.state.isLoadingEvents || this.state.isLoadingEvent)\n            return (\n                <div className=\"AppLoading\">\n                    <div className=\"AppLoadingContent\">\n                        <FontAwesomeIcon icon=\"spinner\" spin/>\n                    </div>\n                </div>\n            );\n    }\n\n    renderSettings() {\n        return (\n            <Setting ref={(input) => {\n                this.setting = input;\n            }} onChange={() => {\n                this.refreshSettings();\n            }}/>\n        );\n    }\n\n    selectEvent(event) {\n        let uid = event.target.value;\n\n        Query.setEvent(uid);\n        this.setState({\n            isLoadingEvent: false,\n            eventData: null,\n            selectedEvent: uid\n        });\n\n        if (!uid)\n            return;\n\n        this.setState({\n            isLoadingEvent: true\n        });\n\n        SubmissionsApi.getEvent(uid, event => {\n            this.setState({\n                isLoadingEvent: false,\n                eventData: event\n            });\n        })\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faBan, faCheck, faCog, faCopy, faFilter, faMinus, faSpinner, faTrashAlt} from '@fortawesome/free-solid-svg-icons';\nimport {faDiscord, faGithub} from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(faBan);\nlibrary.add(faCheck);\nlibrary.add(faCog);\nlibrary.add(faCopy);\nlibrary.add(faFilter);\nlibrary.add(faMinus);\nlibrary.add(faSpinner);\nlibrary.add(faTrashAlt);\nlibrary.add(faDiscord);\nlibrary.add(faGithub);\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}