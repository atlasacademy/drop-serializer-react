{"version":3,"sources":["redux/drop-serializer-actions.js","redux/thunks/load.js","components/Message/Message.js","components/Message/PendingSubmissions.js","components/Message/Messages.js","components/Setting/Field/_SettingFieldReduxConnector.js","components/Setting/Field/Click.js","components/Setting/Field/Columns.js","components/Setting/Field/SubmitterName.js","components/Setting/Field/Vibrate.js","components/Setting/Field/Width.js","components/Setting/_SettingsReduxConnector.js","components/Setting/SettingsModal.js","components/Setting/ToggleSettingsButton.js","components/Drop/_DropReduxConnector.js","components/Drop/Count/DropCount.js","components/Drop/Incrementor/_DropIncrementor.js","components/Drop/Incrementor/_DropIncrementorReduxConnector.js","components/Drop/Incrementor/DropDecrement.js","components/Drop/Incrementor/DropIcon.js","components/Drop/Toggle/DropToggle.js","components/Drop/DropIndicator.js","components/Drop/Drop.js","components/Drop/Count/DropBonusCount.js","components/Drop/Incrementor/DropBonusIcon.js","components/Drop/Incrementor/DropBonusDecrement.js","components/Drop/DropBonus.js","components/Drop/DropContainer.js","redux/thunks/query.js","redux/thunks/select.js","components/Selector/EventSelector.js","components/Selector/NodeSelector.js","components/Button/ToggleFilterButton.js","redux/thunks/submission.js","components/Button/SubmitButton.js","components/DropSerializer.js","redux/drop-serializer-reducer.js","App.js","redux/drop-serializer-module.js","serviceWorker.js","index.js"],"names":["INIT_STATE","LOAD_SESSION","loadSession","type","LOAD_SETTINGS","LOAD_SUBMISSION_QUEUE","QUEUE_SUBMISSION","PUSH_MESSAGE","pushMessage","message","payload","RESET_SUBMISSION","SELECT_EVENT","setEvent","SELECT_NODE","SET_EVENT_LIST","SET_EVENT_DATA","setEventData","SET_SHOW_FILTERS","SET_SHOW_SETTINGS","setShowSettings","SET_SUBMISSION_PENDING","setSubmissionPending","SHIFT_MESSAGES","SHIFT_SUBMISSIONS","shiftSubmissions","UPDATE_DROP","updateDrop","uid","quantity","count","ignored","UPDATE_LOADING","updateLoading","UPDATE_SETTING","updateSetting","property","value","init","options","state","Object","objectSpread","domain","enableEventSelector","enableQueryParameters","messageKey","messages","nodeSave","selectedEvent","selectedNode","selectedDropUid","selectedDropQuantity","selectedDropInitialCount","settings","showFilters","showSettings","submissionPending","submissionQueue","params","URLSearchParams","window","location","search","has","get","dispatch","getState","Promise","resolve","then","fetchEvents","fetchEvent","dropSerializer","submitter_name","_getState$dropSeriali","axios","response","data","_getState$dropSeriali2","Message","_this","this","setTimeout","props","react_default","a","createElement","Alert_default","variant","React","Component","connect","PendingSubmissions","pendingCount","undefined","length","Messages","className","Message_PendingSubmissions","map","components_Message_Message","key","mapStateToProps","ownProps","mapDispatchToProps","update","_SettingFieldReduxConnector","reduxConnect","_ref","Form_default","Group","controlId","Label","Control","as","onChange","e","target","disabled","navigator","vibrate","hide","show","toggle","_SettingsReduxConnector","Modal_default","onHide","Header","closeButton","Title","Body","SubmitterName","Width","Columns","Click","Vibrate","Button_default","onClick","react_fontawesome","icon","nodeDrop","_state$dropSerializer","eventData","submissionDrops","drop","drops","filter","shift","quantityDisplay","submissionDrop","_DropReduxConnector","DropCount","size","parseInt","isNaN","Howl","src","_DropIncrementor","incrementorSettings","classCallCheck","defaultSettings","delay","iteratorSkip","max","min","step","windowLeash","possibleConstructorReturn","getPrototypeOf","call","interval","iterator","running","windowPosition","windowListener","stopInterval","startInterval","stepCount","Math","abs","scrollY","parent","animate","click","play","_this2","setInterval","tick","onWindowScroll","addEventListener","setState","clearInterval","removeEventListener","dropState","_DropIncrementorReduxConnector","DropDecrement","block","tabIndex","onMouseDown","onMouseMove","onMouseOut","onMouseUp","DropIcon","draggable","image","alt","name","DropToggle","DropIndicator","isSelected","difference","indicator","toString","Drop","animating","columns","Incrementor_DropIcon","Drop_DropIndicator","Count_DropCount","Incrementor_DropDecrement","Toggle_DropToggle","DropBonusCount","toConsumableArray","Array","keys","i","DropBonusIcon","DropBonusDecrement","DropBonus","Incrementor_DropBonusIcon","Count_DropBonusCount","Incrementor_DropBonusDecrement","DropContainer","makeNodeDropKey","event_uid","event_node_uid","nodeDrops","Drop_DropBonus","components_Drop_Drop","node_drops","setQuery","eventUid","nodeUid","set","delete","newUrl","protocol","host","pathname","history","replaceState","path","selectNode","EventSelector","updateEvent","concat","eventList","event","NodeSelector","updateNode","nodeList","node","nodes","ToggleFilterButton","queue","submitterName","submission","submitter","sendNext","submit","post","receipt","catch","error","status","SubmitButton","dropCount","_this3","reduce","b","DropSerializer","id","width","href","ToggleSettingsButton","rel","index_es","eventsLoaded","Selector_EventSelector","eventLoaded","Selector_NodeSelector","nodeSelected","Drop_DropContainer","Row_default","Col_default","Button_ToggleFilterButton","Button_SubmitButton","SettingsModal","isLoading","spin","Message_Messages","Boolean","dropSerializerReducer","action","storageKey","json","localStorage","getItem","JSON","parse","storedSettings","push","setItem","stringify","oldMessages","slice","_action$payload","initialDrop","newState","newSettings","App","store","createStore","applyMiddleware","thunkMiddleware","es","redux_dynamic_modules_react_lib","modules","reducerMap","components_DropSerializer","hostname","match","library","add","faBan","faCheck","faCog","faCopy","faFilter","faMinus","faSpinner","faTrashAlt","faDiscord","faGithub","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa38a1e3.chunk.js","sourcesContent":["export const INIT_STATE = \"drop-serializer/INIT_STATE\";\nexport const initState = (payload) => {\n    return {\n        type: INIT_STATE,\n        payload\n    };\n};\n\nexport const LOAD_SESSION = \"drop-serializer/LOAD_SESSION\";\nexport const loadSession = () => {\n    return {\n        type: LOAD_SESSION\n    };\n};\n\nexport const LOAD_SETTINGS = \"drop-serializer/LOAD_SETTINGS\";\nexport const loadSettings = () => {\n    return {\n        type: LOAD_SETTINGS\n    };\n};\n\nexport const LOAD_SUBMISSION_QUEUE = \"drop-serializer/LOAD_SUBMISSION_QUEUE\";\nexport const loadSubmissionQueue = () => {\n    return {\n        type: LOAD_SUBMISSION_QUEUE\n    };\n};\n\nexport const QUEUE_SUBMISSION = \"drop-serializer/QUEUE_SUBMISSION\";\nexport const queueSubmission = (payload) => {\n    return {\n        type: QUEUE_SUBMISSION,\n        payload\n    };\n};\n\nexport const PUSH_MESSAGE = \"drop-serializer/PUSH_MESSAGE\";\nexport const pushMessage = (type, message) => {\n    return {\n        type: PUSH_MESSAGE,\n        payload: {type, message}\n    };\n};\n\nexport const RESET_SUBMISSION = \"drop-serializer/RESET_SUBMISSION\";\nexport const resetSubmission = () => {\n    return {\n        type: RESET_SUBMISSION\n    };\n};\n\nexport const SELECT_EVENT = \"drop-serializer/SELECT_EVENT\";\nexport const setEvent = (payload) => {\n    return {\n        type: SELECT_EVENT,\n        payload\n    };\n};\n\nexport const SELECT_NODE = \"drop-serializer/SELECT_NODE\";\nexport const setNode = (payload) => {\n    return {\n        type: SELECT_NODE,\n        payload\n    };\n};\n\nexport const SET_EVENT_LIST = \"drop-serializer/SET_EVENT_LIST\";\nexport const setEventList = (payload) => {\n    return {\n        type: SET_EVENT_LIST,\n        payload\n    };\n};\n\nexport const SET_EVENT_DATA = \"drop-serializer/SET_EVENT_DATA\";\nexport const setEventData = (payload) => {\n    return {\n        type: SET_EVENT_DATA,\n        payload\n    };\n};\n\nexport const SET_SHOW_FILTERS = \"drop-serializer/SET_SHOW_FILTERS\";\nexport const setShowFilters = (payload) => {\n    return {\n        type: SET_SHOW_FILTERS,\n        payload\n    };\n};\n\nexport const SET_SHOW_SETTINGS = \"drop-serializer/SET_SHOW_SETTINGS\";\nexport const setShowSettings = (payload) => {\n    return {\n        type: SET_SHOW_SETTINGS,\n        payload\n    };\n};\n\nexport const SET_SUBMISSION_PENDING = \"drop-serializer/SET_SUBMISSION_PENDING\";\nexport const setSubmissionPending = (payload) => {\n    return {\n        type: SET_SUBMISSION_PENDING,\n        payload\n    };\n};\n\nexport const SHIFT_MESSAGES = \"drop-serializer/SHIFT_MESSAGES\";\nexport const shiftMessages = () => {\n    return {\n        type: SHIFT_MESSAGES\n    };\n};\n\nexport const SHIFT_SUBMISSIONS = \"drop-serializer/SHIFT_SUBMISSIONS\";\nexport const shiftSubmissions = () => {\n    return {\n        type: SHIFT_SUBMISSIONS\n    };\n};\n\nexport const UPDATE_DROP = \"drop-serializer/UPDATE_DROP\";\nexport const updateDrop = (uid, quantity, count, ignored) => {\n    return {\n        type: UPDATE_DROP,\n        payload: {uid, quantity, count, ignored}\n    };\n};\n\nexport const UPDATE_LOADING = \"drop-serializer/UPDATE_LOADING\";\nexport const updateLoading = (payload) => {\n    return {\n        type: UPDATE_LOADING,\n        payload\n    };\n};\n\nexport const UPDATE_SETTING = \"drop-serializer/UPDATE_SETTING\";\nexport const updateSetting = (property, value) => {\n    return {\n        type: UPDATE_SETTING,\n        payload: {property, value}\n    };\n};\n","import axios from \"axios\";\nimport {\n    initState,\n    loadSession, loadSettings, loadSubmissionQueue,\n    setEventData, setEventList, setShowSettings,\n    updateLoading\n} from \"../drop-serializer-actions\";\n\nexport const init = (options) => {\n    let state = {\n        domain: \"https://submissions.atlasacademy.io\",\n        enableEventSelector: true,\n        enableQueryParameters: true,\n        messageKey: 0,\n        messages: [],\n        nodeSave: [],\n        selectedEvent: \"\",\n        selectedNode: \"\",\n        selectedDropUid: null,\n        selectedDropQuantity: null,\n        selectedDropInitialCount: null,\n        settings: {},\n        showFilters: false,\n        showSettings: false,\n        submissionPending: false,\n        submissionQueue: [],\n        ...options\n    };\n\n    if (state.enableQueryParameters) {\n        let params = new URLSearchParams(window.location.search);\n\n        if (!state.selectedEvent)\n            state.selectedEvent = params.has(\"event\") ? params.get(\"event\") : \"\";\n\n        if (state.selectedEvent && !state.selectedNode)\n            state.selectedNode = params.has(\"node\") ? params.get(\"node\") : \"\";\n    }\n\n    return (dispatch, getState) => {\n        return Promise.resolve()\n                      .then(() => dispatch(initState(state)))\n                      .then(() => dispatch(updateLoading(true)))\n                      .then(() => dispatch(loadSettings()))\n                      .then(() => dispatch(fetchEvents()))\n                      .then(() => dispatch(fetchEvent()))\n                      .then(() => dispatch(loadSession()))\n                      .then(() => dispatch(loadSubmissionQueue()))\n                      .then(() => {\n                          if (getState().dropSerializer.settings.submitter_name === \"\")\n                              return dispatch(setShowSettings(true));\n\n                          return Promise.resolve();\n                      })\n                      .then(() => dispatch(updateLoading(false)));\n    };\n};\n\nexport const fetchEvents = () => {\n    return (dispatch, getState) => {\n        const {domain, enableEventSelector} = getState().dropSerializer;\n\n        if (!enableEventSelector)\n            return;\n\n        return axios.get(domain + \"/event\")\n                    .then(response => dispatch(setEventList(response.data)));\n    };\n};\n\nexport const fetchEvent = () => {\n    return (dispatch, getState) => {\n        const {domain, selectedEvent} = getState().dropSerializer;\n\n        if (!selectedEvent)\n            return;\n\n        return axios.get(domain + \"/event/\" + selectedEvent)\n                    .then(response => dispatch(setEventData(response.data)));\n    };\n};\n","import React from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport {connect} from 'react-redux';\nimport {shiftMessages} from \"../../redux/drop-serializer-actions\";\n\nclass Message extends React.Component {\n    componentDidMount() {\n        window.setTimeout(() => {\n            this.props.dispatch(shiftMessages());\n        }, 5000);\n    }\n\n    render() {\n        return (\n            <Alert variant={this.props.message.type}>{this.props.message.message}</Alert>\n        );\n    }\n}\n\nexport default connect()(Message);\n","import React from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    let {submissionQueue} = state.dropSerializer,\n        pendingCount = submissionQueue === undefined ? 0 : submissionQueue.length;\n\n    return {pendingCount};\n};\n\nclass PendingSubmissions extends React.Component {\n    render() {\n        if (this.props.pendingCount === 0)\n            return null;\n\n        return (\n            <Alert variant='warning'>{this.props.pendingCount} pending submission(s).</Alert>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(PendingSubmissions);\n","import React from \"react\";\nimport {connect} from 'react-redux';\nimport Message from \"./Message\";\nimport PendingSubmissions from \"./PendingSubmissions\";\n\nconst mapStateToProps = (state) => {\n    let {messages} = state.dropSerializer;\n\n    if (messages === undefined)\n        messages = [];\n\n    return {messages};\n};\n\nclass Messages extends React.Component {\n    render() {\n        return (\n            <div className=\"Messages\">\n                <PendingSubmissions />\n                {this.props.messages.map(message =>\n                    <Message key={message.key} message={message} />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(Messages);\n","import {connect as reduxConnect} from \"react-redux\";\nimport {updateSetting} from \"../../../redux/drop-serializer-actions\";\n\nfunction mapStateToProps(state, ownProps) {\n    let {property} = ownProps,\n        {settings} = state.dropSerializer,\n        value = settings[property];\n\n    return {property, value};\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n    return {\n        update: (value) => dispatch(updateSetting(\n            ownProps.property,\n            value\n        ))\n    };\n}\n\nconst connect = reduxConnect(mapStateToProps, mapDispatchToProps);\n\nexport default {connect, mapDispatchToProps, mapStateToProps};\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport _SettingFieldReduxConnector from \"./_SettingFieldReduxConnector\";\n\nexport default _SettingFieldReduxConnector.connect(function ({property, value, update}) {\n    return (\n        <Form.Group controlId=\"settingPlayClick\">\n            <Form.Label>Play Click</Form.Label>\n            <Form.Control as=\"select\" value={value ? \"Yes\" : \"No\"}\n                          onChange={e => update(e.target.value === \"Yes\")}>\n                <option>Yes</option>\n                <option>No</option>\n            </Form.Control>\n        </Form.Group>\n    )\n});\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport _SettingFieldReduxConnector from \"./_SettingFieldReduxConnector\";\n\nexport default _SettingFieldReduxConnector.connect(function ({property, value, update}) {\n    return (\n        <Form.Group controlId=\"settingNumberOfColumns\">\n            <Form.Label>Number of Columns</Form.Label>\n            <Form.Control as=\"select\"\n                          value={value}\n                          onChange={e => update(e.target.value)}>\n                <option value=\"columns_auto\">Auto</option>\n                <option value=\"columns_2\">2</option>\n                <option value=\"columns_4\">4</option>\n                <option value=\"columns_6\">6</option>\n                <option value=\"columns_8\">8</option>\n                <option value=\"columns_12\">12</option>\n                <option value=\"columns_16\">16</option>\n            </Form.Control>\n        </Form.Group>\n    )\n});\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport _SettingFieldReduxConnector from \"./_SettingFieldReduxConnector\";\n\nexport default _SettingFieldReduxConnector.connect(function ({property, value, update}) {\n    return (\n        <Form.Group controlId=\"settingSubmitterName\">\n            <Form.Label>Submitter Name</Form.Label>\n            <Form.Control value={value} onChange={e => update(e.target.value)}/>\n        </Form.Group>\n    )\n});\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport _SettingFieldReduxConnector from \"./_SettingFieldReduxConnector\";\n\nexport default _SettingFieldReduxConnector.connect(function ({property, value, update}) {\n    return (\n        <Form.Group controlId=\"settingVibrate\">\n            <Form.Label>Vibrate</Form.Label>\n            <Form.Control as=\"select\"\n                          value={value ? \"Yes\" : \"No\"}\n                          disabled={!window.navigator.vibrate}\n                          onChange={e => update(e.target.value === \"Yes\")}>\n                <option>Yes</option>\n                <option>No</option>\n            </Form.Control>\n        </Form.Group>\n    )\n});\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport _SettingFieldReduxConnector from \"./_SettingFieldReduxConnector\";\n\nexport default _SettingFieldReduxConnector.connect(function ({property, value, update}) {\n    return (\n        <Form.Group controlId=\"settingAppWidth\">\n            <Form.Label>App Width</Form.Label>\n            <Form.Control as=\"select\" value={value} onChange={e => update(e.target.value)}>\n                <option value=\"width_full\">Full Width</option>\n                <option value=\"width_480\">480px</option>\n                <option value=\"width_720\">720px</option>\n                <option value=\"width_1080\">1080p</option>\n                <option value=\"width_2160\">2160p</option>\n            </Form.Control>\n        </Form.Group>\n    )\n});\n","import {connect as reduxConnect} from \"react-redux\";\nimport {setShowSettings} from \"../../redux/drop-serializer-actions\";\n\nfunction mapStateToProps(state) {\n    let {showSettings} = state.dropSerializer;\n\n    return {showSettings};\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        hide: () => dispatch(setShowSettings(false)),\n        show: () => dispatch(setShowSettings(true)),\n        toggle: () => dispatch((dispatch, getState) => {\n            let {showSettings} = getState().dropSerializer;\n\n            return dispatch(setShowSettings(!showSettings));\n        })\n    };\n}\n\nconst connect = reduxConnect(mapStateToProps, mapDispatchToProps);\n\nexport default {connect, mapDispatchToProps, mapStateToProps};\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Click from \"./Field/Click\";\nimport Columns from \"./Field/Columns\";\nimport SubmitterName from \"./Field/SubmitterName\";\nimport Vibrate from \"./Field/Vibrate\";\nimport Width from \"./Field/Width\";\nimport _SettingsReduxConnector from \"./_SettingsReduxConnector\";\n\nexport default _SettingsReduxConnector.connect(function ({showSettings, show, hide}) {\n    return (\n        <Modal show={showSettings} onHide={e => hide()}>\n            <Modal.Header closeButton>\n                <Modal.Title>Settings</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <SubmitterName property={'submitter_name'} />\n                <Width property={'width'} />\n                <Columns property={'columns'} />\n                <Click property={'click'} />\n                <Vibrate property={'vibrate'} />\n            </Modal.Body>\n        </Modal>\n    )\n});\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome/index\";\nimport _SettingsReduxConnector from \"./_SettingsReduxConnector\";\n\nexport default _SettingsReduxConnector.connect(function ({showSettings, show, hide}) {\n    return (\n        <Button variant=\"primary\" className=\"settings\" onClick={e => show(e)}>\n            <FontAwesomeIcon icon=\"cog\"/>\n        </Button>\n    )\n});\n","import {connect as reduxConnect} from \"react-redux\";\nimport {updateDrop} from \"../../redux/drop-serializer-actions\";\n\nfunction mapStateToProps(state, ownProps) {\n    let {nodeDrop} = ownProps,\n        {\n            eventData,\n            selectedDropUid,\n            selectedDropQuantity,\n            selectedDropInitialCount,\n            settings,\n            showFilters,\n            submissionDrops\n        } = state.dropSerializer,\n        drop = eventData.drops.filter(drop => drop.uid === nodeDrop.uid).shift(),\n        quantityDisplay = nodeDrop.quantity > 1 ? nodeDrop.quantity : drop.quantity,\n        submissionDrop = submissionDrops.filter(submissionDrop => {\n                                            return submissionDrop.uid === nodeDrop.uid\n                                                && submissionDrop.quantity === nodeDrop.quantity;\n                                        })\n                                        .shift();\n\n    if (submissionDrop === undefined)\n        submissionDrop = {\n            uid: nodeDrop.uid,\n            quantity: nodeDrop.quantity,\n            count: 0,\n            ignored: false\n        };\n\n    return {\n        drop,\n        nodeDrop,\n        quantityDisplay,\n        selectedDropUid,\n        selectedDropQuantity,\n        selectedDropInitialCount,\n        submissionDrop,\n        settings,\n        showFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n    return {\n        update: (count, ignored) => dispatch(updateDrop(\n            ownProps.nodeDrop.uid,\n            ownProps.nodeDrop.quantity,\n            count,\n            ignored\n        ))\n    };\n}\n\nconst connect = reduxConnect(mapStateToProps, mapDispatchToProps);\n\nexport default {connect, mapDispatchToProps, mapStateToProps};\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport _DropReduxConnector from \"../_DropReduxConnector\";\n\nclass DropCount extends React.Component {\n\n    render() {\n        return (\n            <Form.Control type=\"text\"\n                          className=\"drop-input\"\n                          value={this.props.submissionDrop.count}\n                          onChange={(e) => this.onChange(e)}\n                          size=\"sm\"/>\n        );\n    }\n\n    onChange(e) {\n        let value = parseInt(e.target.value);\n\n        if (isNaN(value))\n            value = 0;\n        else if (value < 0)\n            value = 0;\n\n        this.props.update(value, false);\n    }\n}\n\nexport default _DropReduxConnector.connect(DropCount);\n","import React from \"react\";\nimport {Howl} from \"howler\";\n\nconst Click = new Howl({src: \"./sounds/click.mp3\"});\n\nclass _DropIncrementor extends React.Component {\n\n    constructor(props, incrementorSettings) {\n        super(props);\n\n        const defaultSettings = {\n            delay: 250,\n            iteratorSkip: 2,\n            max: undefined,\n            min: 0,\n            step: 1,\n            windowLeash: 10\n        };\n\n        this.incrementorSettings = {\n            ...defaultSettings,\n            ...incrementorSettings\n        };\n\n        this.state = {\n            interval: null,\n            iterator: 0,\n            running: false,\n            windowPosition: null,\n            windowListener: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.stopInterval();\n    }\n\n    onMouseDown(e) {\n        if (this.state.running)\n            return;\n\n        this.startInterval();\n    }\n\n    onMouseMove(e) {\n        //\n    }\n\n    onMouseOut(e) {\n        if (!this.state.running)\n            return;\n\n        this.stopInterval();\n    }\n\n    onMouseUp(e) {\n        if (!this.state.running)\n            return;\n\n        if (this.state.iterator <= this.incrementorSettings.iteratorSkip)\n            this.stepCount();\n\n        this.stopInterval();\n    }\n\n    onWindowScroll(e) {\n        if (!this.state.running)\n            return;\n\n        let diff = Math.abs(window.scrollY - this.state.windowPosition);\n        if (diff > this.incrementorSettings.windowLeash)\n            this.stopInterval();\n    }\n\n    stepCount() {\n        let count = this.props.submissionDrop.count + this.incrementorSettings.step;\n        if (count < this.incrementorSettings.min)\n            count = this.incrementorSettings.min;\n        else if (this.incrementorSettings.max !== undefined && count > this.incrementorSettings.max)\n            count = this.incrementorSettings.max;\n\n        this.props.update(count, false);\n\n        this.props.parent.animate();\n\n        if (this.props.settings.click)\n            Click.play();\n\n        if (this.props.settings.vibrate && window.navigator.vibrate)\n            window.navigator.vibrate(100);\n    }\n\n    startInterval() {\n        let interval = setInterval(() => this.tick(), this.incrementorSettings.delay),\n            windowPosition = window.scrollY,\n            windowListener = (e) => this.onWindowScroll(e);\n\n        window.addEventListener(\"scroll\", windowListener);\n        this.setState({\n            iterator: 0,\n            running: true,\n            interval,\n            windowListener,\n            windowPosition\n        });\n    }\n\n    stopInterval() {\n        if (!this.state.running)\n            return;\n\n        clearInterval(this.state.interval);\n        window.removeEventListener(\"scroll\", this.state.windowListener);\n\n        this.setState({\n            running: false,\n            interval: null,\n            windowListener: null,\n            windowPosition: null\n        });\n    }\n\n    tick() {\n        if (this.state.iterator > this.incrementorSettings.iteratorSkip) {\n            this.stepCount();\n        }\n\n        this.setState({iterator: this.state.iterator + 1});\n    }\n}\n\nexport default _DropIncrementor;\n","import {connect as reduxConnect} from \"react-redux\";\nimport _DropReduxConnector from \"../_DropReduxConnector\";\n\nfunction mapStateToProps(state, ownProps) {\n    const {parent} = ownProps,\n        dropState = _DropReduxConnector.mapStateToProps(state, ownProps);\n\n    return {\n        ...dropState,\n        parent\n    };\n}\n\nconst mapDispatchToProps = _DropReduxConnector.mapDispatchToProps;\n\nconst connect = reduxConnect(mapStateToProps, mapDispatchToProps);\n\nexport default {connect, mapDispatchToProps, mapStateToProps};\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome/index\";\nimport _DropIncrementor from \"./_DropIncrementor\";\nimport _DropIncrementorReduxConnector from \"./_DropIncrementorReduxConnector\";\n\nclass DropDecrement extends _DropIncrementor {\n\n    constructor(props) {\n        super(props, {\n            delay: 250,\n            iteratorSkip: 2,\n            step: -1,\n            windowLeash: 10\n        });\n    }\n\n    render() {\n        return (\n            <Button variant=\"primary\" block size=\"sm\" tabIndex=\"-1\"\n                    onMouseDown={(e) => this.onMouseDown(e)}\n                    onMouseMove={(e) => this.onMouseMove(e)}\n                    onMouseOut={(e) => this.onMouseOut(e)}\n                    onMouseUp={(e) => this.onMouseUp(e)}>\n                <FontAwesomeIcon icon=\"minus\"/>\n            </Button>\n        );\n    }\n}\n\nexport default _DropIncrementorReduxConnector.connect(DropDecrement);\n","import React from \"react\";\nimport _DropIncrementor from \"./_DropIncrementor\";\nimport _DropIncrementorReduxConnector from \"./_DropIncrementorReduxConnector\";\n\nclass DropIcon extends _DropIncrementor {\n    constructor(props) {\n        super(props, {\n            delay: 250,\n            iteratorSkip: 2,\n            step: 1,\n            windowLeash: 10\n        });\n    }\n\n    render() {\n        return (\n            <img className=\"drop-icon\" draggable=\"false\"\n                 src={this.props.drop.image}\n                 alt={this.props.drop.name}\n                 onMouseDown={(e) => this.onMouseDown(e)}\n                 onMouseMove={(e) => this.onMouseMove(e)}\n                 onMouseOut={(e) => this.onMouseOut(e)}\n                 onMouseUp={(e) => this.onMouseUp(e)}/>\n        );\n    }\n}\n\nexport default _DropIncrementorReduxConnector.connect(DropIcon);\n","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome/index\";\nimport _DropReduxConnector from \"../_DropReduxConnector\";\n\nclass DropToggle extends React.Component {\n\n    render() {\n        if (!this.props.showFilters)\n            return null;\n\n        return (\n            <div className=\"drop-toggle\" onClick={(e) => this.onClick(e)}>\n                <FontAwesomeIcon className=\"drop-toggle-icon\"\n                                 icon={this.props.submissionDrop.ignored ? \"ban\" : \"check\"}/>\n            </div>\n        );\n    }\n\n    onClick(e) {\n        this.props.update(0, !this.props.submissionDrop.ignored);\n    }\n}\n\nexport default _DropReduxConnector.connect(DropToggle);\n","import React from \"react\";\nimport _DropReduxConnector from \"./_DropReduxConnector\";\n\nclass DropIndicator extends React.Component {\n\n    render() {\n        let isSelected = (\n                this.props.selectedDropUid === this.props.nodeDrop.uid\n                && this.props.selectedDropQuantity === this.props.nodeDrop.quantity\n            ),\n            difference = isSelected ? this.props.submissionDrop.count - this.props.selectedDropInitialCount : 0,\n            plusOrMinus = difference >= 0 ? \"+\" : \"-\",\n            indicatorNumber = isSelected ? Math.abs(difference).toString() : \"\",\n            indicator = plusOrMinus + indicatorNumber;\n\n        return (\n            <span className=\"drop-indicator\">{indicator}</span>\n        )\n    }\n\n}\n\nexport default _DropReduxConnector.connect(DropIndicator);\n","import React from \"react\";\nimport _DropReduxConnector from \"./_DropReduxConnector\";\nimport DropCount from \"./Count/DropCount\";\nimport DropDecrement from \"./Incrementor/DropDecrement\";\nimport DropIcon from \"./Incrementor/DropIcon\";\nimport DropToggle from \"./Toggle/DropToggle\";\nimport DropIndicator from \"./DropIndicator\";\n\nclass Drop extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            animating: false\n        };\n    }\n\n    render() {\n        if (this.props.submissionDrop.ignored && !this.props.showFilters)\n            return null;\n\n        return (\n            <div className={\"drop \" + this.props.settings.columns + (this.state.animating ? \" animating\" : \"\")}>\n                <div className=\"drop-border\">\n                    <div className=\"drop-content\">\n                        <div className=\"drop-icon-box\">\n                            <DropIcon nodeDrop={this.props.nodeDrop} parent={this}/>\n                            <DropIndicator nodeDrop={this.props.nodeDrop}/>\n                            <span className=\"drop-quantity\">\n                                {this.props.quantityDisplay > 1 ? this.props.quantityDisplay : \"\"}\n                            </span>\n                        </div>\n                        <DropCount nodeDrop={this.props.nodeDrop}/>\n                        <DropDecrement nodeDrop={this.props.nodeDrop} parent={this}/>\n                    </div>\n                    <DropToggle nodeDrop={this.props.nodeDrop}/>\n                </div>\n            </div>\n        )\n    }\n\n    animate() {\n        this.setState({animating: true});\n\n        setTimeout(() => this.setState({animating: false}), 1);\n    }\n}\n\nexport default _DropReduxConnector.connect(Drop);\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport _DropReduxConnector from \"../_DropReduxConnector\";\n\nclass DropBonusCount extends React.Component {\n\n    render() {\n        return (\n            <Form.Control as=\"select\"\n                          className=\"drop-input\"\n                          value={this.props.submissionDrop.count}\n                          onChange={(e) => this.props.update(parseInt(e.target.value), false)}\n                          size=\"sm\">\n                {[...Array(11).keys()].map(i =>\n                    <option key={i} value={i * 10}>{i * 10}%</option>\n                )}\n            </Form.Control>\n        );\n    }\n}\n\nexport default _DropReduxConnector.connect(DropBonusCount);\n","import React from \"react\";\nimport _DropIncrementor from \"./_DropIncrementor\";\nimport _DropIncrementorReduxConnector from \"./_DropIncrementorReduxConnector\";\n\nclass DropBonusIcon extends _DropIncrementor {\n    constructor(props) {\n        super(props, {\n            max: 100,\n            step: 10,\n        });\n    }\n\n    render() {\n        return (\n            <img className=\"drop-icon\" draggable=\"false\"\n                 src={this.props.drop.image}\n                 alt={this.props.drop.name}\n                 onMouseDown={(e) => this.onMouseDown(e)}\n                 onMouseMove={(e) => this.onMouseMove(e)}\n                 onMouseOut={(e) => this.onMouseOut(e)}\n                 onMouseUp={(e) => this.onMouseUp(e)}/>\n        );\n    }\n}\n\nexport default _DropIncrementorReduxConnector.connect(DropBonusIcon);\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome/index\";\nimport _DropIncrementor from \"./_DropIncrementor\";\nimport _DropIncrementorReduxConnector from \"./_DropIncrementorReduxConnector\";\n\nclass DropBonusDecrement extends _DropIncrementor {\n\n    constructor(props) {\n        super(props, {\n            max: 100,\n            step: -10\n        });\n    }\n\n    render() {\n        return (\n            <Button variant=\"primary\" block size=\"sm\" tabIndex=\"-1\"\n                    onMouseDown={(e) => this.onMouseDown(e)}\n                    onMouseMove={(e) => this.onMouseMove(e)}\n                    onMouseOut={(e) => this.onMouseOut(e)}\n                    onMouseUp={(e) => this.onMouseUp(e)}>\n                <FontAwesomeIcon icon=\"minus\"/>\n            </Button>\n        );\n    }\n}\n\nexport default _DropIncrementorReduxConnector.connect(DropBonusDecrement);\n","import React from \"react\";\nimport _DropReduxConnector from \"./_DropReduxConnector\";\nimport DropBonusCount from \"./Count/DropBonusCount\";\nimport DropBonusIcon from \"./Incrementor/DropBonusIcon\";\nimport DropBonusDecrement from \"./Incrementor/DropBonusDecrement\";\n\nclass DropBonus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            animating: false\n        };\n    }\n\n    render() {\n        return (\n            <div className={\"drop drop-bonus \" + this.props.settings.columns + (this.state.animating ? \" animating\" : \"\")}>\n                <div className=\"drop-border\">\n                    <div className=\"drop-content\">\n                        <div className=\"drop-icon-box\">\n                            <DropBonusIcon nodeDrop={this.props.nodeDrop} parent={this}/>\n                            <span className=\"drop-indicator\">Bonus</span>\n                        </div>\n                        <DropBonusCount nodeDrop={this.props.nodeDrop}/>\n                        <DropBonusDecrement nodeDrop={this.props.nodeDrop} parent={this}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    animate() {\n        this.setState({animating: true});\n\n        setTimeout(() => this.setState({animating: false}), 1);\n    }\n}\n\nexport default _DropReduxConnector.connect(DropBonus);\n","import React from \"react\";\nimport {connect} from 'react-redux';\nimport Drop from './Drop';\nimport DropBonus from \"./DropBonus\";\n\nconst mapStateToProps = (state) => {\n    const {selectedNode} = state.dropSerializer,\n        nodeDrops = state.dropSerializer.eventData.node_drops\n                         .filter(nodeDrop => nodeDrop.event_node_uid === selectedNode),\n        drops = nodeDrops.map(nodeDrop =>\n            state.dropSerializer.eventData.drops.filter(drop => drop.uid === nodeDrop.uid).shift()\n        );\n\n    return {drops, nodeDrops};\n};\n\nclass DropContainer extends React.Component {\n\n    render() {\n        const makeNodeDropKey = function (nodeDrop) {\n            return '' + nodeDrop.event_uid\n                + '_' + nodeDrop.event_node_uid\n                + '_' + nodeDrop.uid\n                + '_' + nodeDrop.quantity;\n        };\n\n        return <div className={\"drop-container\"}>\n            {this.props.nodeDrops.map((nodeDrop, i) =>\n                this.props.drops[i] && this.props.drops[i].type === \"Bonus Rate-Up\"\n                    ? <DropBonus key={makeNodeDropKey(nodeDrop)} nodeDrop={nodeDrop}/>\n                    : <Drop key={makeNodeDropKey(nodeDrop)} nodeDrop={nodeDrop}/>\n            )}\n        </div>;\n    }\n\n}\n\nexport default connect(mapStateToProps)(DropContainer);\n","export const setQuery = (eventUid, nodeUid) => {\n    return (dispatch, getState) => {\n        const {enableQueryParameters} = getState().dropSerializer;\n\n        if (!enableQueryParameters)\n            return;\n\n        let location = window.location,\n            params = new URLSearchParams(location.search);\n\n        if (eventUid) params.set(\"event\", eventUid);\n        else params.delete(\"event\");\n\n        if (nodeUid) params.set(\"node\", nodeUid);\n        else params.delete(\"node\");\n\n        let hostname = location.protocol + \"//\" + location.host + location.pathname,\n            newUrl = hostname + \"?\" + params.toString();\n\n        window.history.replaceState({path: newUrl}, '', newUrl);\n    };\n};","import {loadSession, setEvent, setEventData, setNode, updateLoading} from \"../drop-serializer-actions\";\nimport {setQuery} from \"./query\";\nimport {fetchEvent} from \"./load\";\n\nexport const selectEvent = (uid) => {\n    return (dispatch, getState) => {\n        const {eventData} = getState().dropSerializer;\n\n        if (eventData && uid === eventData.uid)\n            return;\n\n        if (!uid)\n            return Promise.resolve()\n                          .then(() => dispatch(setEvent(uid)))\n                          .then(() => dispatch(setQuery(false, false)))\n                          .then(() => dispatch(setEventData(null)));\n\n        return Promise.resolve()\n                      .then(() => dispatch(setEvent(uid)))\n                      .then(() => dispatch(setQuery(uid, false)))\n                      .then(() => dispatch(updateLoading(true)))\n                      .then(() => dispatch(setEventData(null)))\n                      .then(() => dispatch(fetchEvent()))\n                      .then(() => dispatch(updateLoading(false)));\n    };\n};\n\nexport const selectNode = (uid) => {\n    return (dispatch, getState) => {\n        const {selectedEvent} = getState().dropSerializer;\n\n        return Promise.resolve()\n                      .then(() => dispatch(setNode(uid)))\n                      .then(() => dispatch(setQuery(selectedEvent, uid)))\n                      .then(() => dispatch(loadSession()));\n    };\n};\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport {connect} from 'react-redux';\nimport {selectEvent} from \"../../redux/thunks/select\";\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedEvent: state.dropSerializer.selectedEvent,\n        eventList: state.dropSerializer.eventList\n    };\n};\n\nclass EventSelector extends React.Component {\n\n    render() {\n        return (\n            <Form.Control as=\"select\"\n                          className=\"event-selector\"\n                          onChange={e => this.updateEvent(e)}\n                          value={this.props.selectedEvent}>\n                {\n                    [\n                        <option key={0} value={\"\"}>Select a event</option>\n                    ].concat(this.props.eventList.map((event, i) =>\n                        <option key={i + 1} value={event.uid}>{event.name}</option>\n                    ))\n                }\n            </Form.Control>\n        );\n    }\n\n    updateEvent(event) {\n        this.props.dispatch(selectEvent(event.target.value));\n    }\n\n}\n\nexport default connect(mapStateToProps)(EventSelector);\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport {connect} from 'react-redux';\nimport {selectNode} from \"../../redux/thunks/select\";\n\nconst mapStateToProps = (state) => {\n    return {\n        nodeList: state.dropSerializer.eventData.nodes,\n        selectedNode: state.dropSerializer.selectedNode\n    };\n};\n\nclass NodeSelector extends React.Component {\n\n    render() {\n        return (\n            <Form.Control as=\"select\"\n                          className=\"event-selector\"\n                          onChange={e => {\n                              this.updateNode(e)\n                          }}\n                          value={this.props.selectedNode}>\n                {\n                    [\n                        <option key={0} value={\"\"}>Select a node</option>\n                    ].concat(this.props.nodeList.map((node, i) =>\n                        <option key={i + 1} value={node.uid}>{node.name}</option>\n                    ))\n                }\n            </Form.Control>\n        );\n    }\n\n    updateNode(event) {\n        this.props.dispatch(selectNode(event.target.value));\n    }\n\n}\n\nexport default connect(mapStateToProps)(NodeSelector);\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome/index\";\nimport {connect} from 'react-redux';\nimport {setShowFilters} from \"../../redux/drop-serializer-actions\";\n\nconst mapStateToProps = (state) => {\n    const {showFilters} = state.dropSerializer;\n\n    return {showFilters};\n};\n\nclass ToggleFilterButton extends React.Component {\n\n    render() {\n        return (\n            <Button variant=\"primary\" block onClick={(e) => this.onClick(e)}>\n                <FontAwesomeIcon icon=\"filter\"/> Toggle Filter\n            </Button>\n        );\n    }\n\n    onClick(e) {\n        this.props.dispatch(setShowFilters(!this.props.showFilters));\n    }\n\n}\n\nexport default connect(mapStateToProps)(ToggleFilterButton);\n","import axios from \"axios\";\nimport {\n    pushMessage,\n    queueSubmission,\n    resetSubmission,\n    setSubmissionPending,\n    shiftSubmissions\n} from \"../drop-serializer-actions\";\n\nexport const queue = () => {\n    return (dispatch, getState) => {\n        const {eventData, selectedEvent, selectedNode, settings, submissionDrops} = getState().dropSerializer,\n            nodeDrops = eventData.node_drops.filter(nodeDrop => nodeDrop.event_node_uid === selectedNode),\n            submitterName = settings ? settings.submitter_name : \"\";\n\n        // Loop through node drops and fill in any drops missing from submission drops with standard 0 count\n        let drops = nodeDrops.map(nodeDrop => {\n            let drop = submissionDrops.filter(submissionDrop =>\n                submissionDrop.uid === nodeDrop.uid && submissionDrop.quantity === nodeDrop.quantity\n            ).shift();\n\n            if (!drop)\n                drop = {uid: nodeDrop.uid, quantity: nodeDrop.quantity, count: 0, ignored: false};\n\n            return drop;\n        });\n\n        let submission = {\n            event_uid: selectedEvent,\n            event_node_uid: selectedNode,\n            submitter: submitterName,\n            drops: drops\n        };\n\n        return Promise.resolve()\n                      .then(() => dispatch(queueSubmission(submission)))\n                      .then(() => dispatch(resetSubmission()))\n                      .then(() => dispatch(sendNext()));\n    };\n};\n\nexport const sendNext = () => {\n    return (dispatch, getState) => {\n        const {submissionQueue, submissionPending} = getState().dropSerializer;\n\n        if (submissionPending)\n            return;\n\n        if (!submissionQueue.length)\n            return;\n\n        let submission = submissionQueue[0];\n\n        return dispatch(submit(submission));\n    };\n};\n\nexport const submit = (submission) => {\n    return (dispatch, getState) => {\n        const {domain} = getState().dropSerializer;\n\n        return Promise.resolve()\n                      .then(() => dispatch(setSubmissionPending(true)))\n                      .then(() => axios.post(domain + '/submit/run', submission))\n                      .then((response) =>\n                          Promise.resolve()\n                                 .then(() => dispatch(pushMessage(\n                                     \"success\",\n                                     \"Created submission: \" + response.data.receipt\n                                 )))\n                                 .then(() => dispatch(shiftSubmissions()))\n                                 .then(() => dispatch(setSubmissionPending(false)))\n                                 .then(() => dispatch(sendNext()))\n                      )\n                      .catch(error => {\n                          if (error.response.status === 422) {\n                              return Promise.resolve()\n                                            .then(() => dispatch(pushMessage(\n                                                \"danger\",\n                                                \"Submission rejected\"\n                                            )))\n                                            .then(() => dispatch(shiftSubmissions()))\n                                            .then(() => dispatch(setSubmissionPending(false)))\n                                            .then(() => dispatch(sendNext()));\n                          }\n\n                          return Promise.resolve()\n                                        .then(() => dispatch(pushMessage(\n                                            \"warning\",\n                                            \"Issue during submission. Retrying ...\"\n                                        )))\n                                        .then(() => {\n                                            return new Promise(resolve => {\n                                                window.setTimeout(resolve, 5000);\n                                            });\n                                        })\n                                        .then(() => dispatch(setSubmissionPending(false)))\n                                        .then(() => dispatch(sendNext()));\n                      });\n    };\n};\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome/index\";\nimport {connect} from 'react-redux';\nimport {queue} from \"../../redux/thunks/submission\";\n\nconst mapStateToProps = (state) => {\n    const dropCounts = state.dropSerializer.submissionDrops.map(submissionDrop =>\n            submissionDrop.ignored ? 0 : submissionDrop.count\n        ),\n        dropCount = dropCounts.reduce((a, b) => a + b, 0);\n\n    return {dropCount};\n};\n\nclass SubmitButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            delay: 1000,\n            disabled: false\n        }\n    }\n\n    render() {\n        return (\n            <Button variant=\"success\" block disabled={this.state.disabled} onClick={(e) => this.submit()}>\n                <img className=\"chest-icon\" src=\"assets/chest.png\"/> {this.props.dropCount}\n                &nbsp;\n                -\n                &nbsp;\n                <FontAwesomeIcon icon=\"copy\"/> Submit Run\n            </Button>\n        );\n    }\n\n    submit() {\n        this.props.dispatch(queue());\n        this.setState({disabled: true});\n        window.setTimeout(() => {\n            this.setState({disabled: false});\n        }, this.state.delay);\n    }\n}\n\nexport default connect(mapStateToProps)(SubmitButton);\n","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport {connect} from 'react-redux';\nimport {init} from '../redux/thunks/load';\nimport \"../sass/drop-serializer.scss\";\nimport Messages from \"./Message/Messages\";\nimport Settings from \"./Setting/SettingsModal\";\nimport ToggleSettingButton from \"./Setting/ToggleSettingsButton\";\nimport DropContainer from \"./Drop/DropContainer\";\nimport EventSelector from \"./Selector/EventSelector\";\nimport NodeSelector from \"./Selector/NodeSelector\";\nimport ToggleFilterButton from \"./Button/ToggleFilterButton\";\nimport SubmitButton from \"./Button/SubmitButton\";\n\nconst mapStateToProps = (state, ownProps) => {\n    const {eventData, eventList, isLoading, selectedEvent, selectedNode, settings} = state.dropSerializer,\n        {options} = ownProps,\n        eventsLoaded = eventList && eventList.length > 0,\n        eventLoaded = eventsLoaded && Boolean(eventData),\n        nodeSelected = !isLoading && eventLoaded && Boolean(selectedEvent) && Boolean(selectedNode);\n\n    return {eventsLoaded, eventLoaded, isLoading, nodeSelected, options, settings};\n};\n\nclass DropSerializer extends React.Component {\n\n    componentDidMount() {\n        this.props.dispatch(init(this.props.options));\n    }\n\n    render() {\n        return <div id={\"drop-serializer\"} className={this.props.settings.width}>\n            <div className=\"title\">\n                <h1>\n                    Drop Serializer\n                    <small>by <a href=\"https://discord.gg/TKJmuCR\">Atlas Academy</a></small>\n                </h1>\n\n                <ToggleSettingButton/>\n\n                <div className=\"links\">\n                    <a href=\"https://github.com/atlasacademy/drop-serializer-react\"\n                       className=\"text-secondary\"\n                       target=\"_blank\" rel=\"noopener noreferrer author\">\n                        <FontAwesomeIcon icon={['fab', 'github']}/>\n                    </a>\n                    <a href=\"https://discord.gg/TKJmuCR\"\n                       className=\"text-secondary\"\n                       target=\"_blank\" rel=\"noopener noreferrer author\">\n                        <FontAwesomeIcon icon={['fab', 'discord']}/>\n                    </a>\n                </div>\n            </div>\n            {this.props.eventsLoaded && <EventSelector/>}\n            {this.props.eventLoaded && <NodeSelector/>}\n            {this.props.nodeSelected &&\n            <div>\n                <DropContainer/>\n                <Row>\n                    <Col>\n                        <ToggleFilterButton/>\n                    </Col>\n                    <Col>\n                        <SubmitButton/>\n                    </Col>\n                </Row>\n            </div>\n            }\n            <Settings/>\n            {this.props.isLoading && <div className=\"loading\">\n                <div className=\"loading-content\">\n                    <FontAwesomeIcon icon=\"spinner\" spin/>\n                </div>\n            </div>}\n            <Messages/>\n        </div>;\n    }\n\n}\n\nexport default connect(mapStateToProps)(DropSerializer);\n","import {\n    INIT_STATE,\n    LOAD_SESSION,\n    LOAD_SETTINGS,\n    LOAD_SUBMISSION_QUEUE,\n    PUSH_MESSAGE,\n    QUEUE_SUBMISSION, RESET_SUBMISSION,\n    SELECT_EVENT,\n    SELECT_NODE,\n    SET_EVENT_DATA,\n    SET_EVENT_LIST,\n    SET_SHOW_FILTERS,\n    SET_SHOW_SETTINGS,\n    SET_SUBMISSION_PENDING,\n    SHIFT_MESSAGES,\n    SHIFT_SUBMISSIONS,\n    UPDATE_DROP,\n    UPDATE_LOADING,\n    UPDATE_SETTING\n} from \"./drop-serializer-actions\";\n\nexport default function dropSerializerReducer(state, action) {\n    switch (action.type) {\n        case INIT_STATE:\n            return {...state, ...action.payload};\n        case LOAD_SESSION: {\n            let {selectedEvent, selectedNode} = state,\n                storageKey = '' + selectedEvent + '_' + selectedNode,\n                json = window.localStorage.getItem(storageKey),\n                submissionDrops = json === null ? [] : JSON.parse(json);\n\n            if (!selectedEvent || !selectedNode)\n                submissionDrops = [];\n\n            return {...state, submissionDrops};\n        }\n        case LOAD_SETTINGS: {\n            let defaultSettings = {\n                    submitter_name: \"\",\n                    click: true,\n                    columns: \"columns_auto\",\n                    vibrate: true,\n                    width: \"width_full\"\n                },\n                json = window.localStorage.getItem('settings'),\n                storedSettings = json === null ? [] : JSON.parse(json),\n                settings = {...defaultSettings, ...storedSettings};\n\n            return {...state, settings};\n        }\n        case LOAD_SUBMISSION_QUEUE: {\n            let json = window.localStorage.getItem(\"submissions\"),\n                submissionQueue = json === null ? [] : JSON.parse(json);\n\n            return {...state, submissionQueue};\n        }\n        case QUEUE_SUBMISSION: {\n            let submission = action.payload,\n                {submissionQueue} = state;\n\n            submissionQueue.push(submission);\n\n            window.localStorage.setItem(\"submissions\", JSON.stringify(submissionQueue));\n\n            return {...state, submissionQueue};\n        }\n        case PUSH_MESSAGE: {\n            let messageKey = state.messageKey,\n                oldMessages = state.messages,\n                message = {...action.payload, key: messageKey++},\n                messages = [...oldMessages, message];\n\n            return {...state, messageKey, messages};\n        }\n        case RESET_SUBMISSION: {\n            let {selectedEvent, selectedNode} = state,\n                storageKey = '' + selectedEvent + '_' + selectedNode,\n                drops = state.eventData.drops,\n                submissionDrops = state.submissionDrops.map(submissionDrop => {\n                    let drop = drops.filter(drop => drop.uid === submissionDrop.uid).shift();\n\n                    if (drop && drop.type === \"Bonus Rate-Up\")\n                        return submissionDrop;\n\n                    return {...submissionDrop, count: 0};\n                });\n\n            window.localStorage.setItem(storageKey, JSON.stringify(submissionDrops));\n\n            return {\n                ...state,\n                selectedDropUid: null,\n                selectedDropQuantity: null,\n                selectedDropInitialCount: null,\n                submissionDrops\n            };\n        }\n        case SELECT_EVENT:\n            return {...state, selectedEvent: action.payload, selectedNode: \"\"};\n        case SELECT_NODE:\n            return {...state, selectedNode: action.payload};\n        case SET_EVENT_LIST:\n            return {...state, eventList: action.payload};\n        case SET_EVENT_DATA:\n            return {...state, eventData: action.payload};\n        case SET_SHOW_FILTERS:\n            return {...state, showFilters: action.payload};\n        case SET_SHOW_SETTINGS:\n            return {...state, showSettings: action.payload};\n        case SET_SUBMISSION_PENDING:\n            return {...state, submissionPending: action.payload};\n        case SHIFT_MESSAGES: {\n            let messages = state.messages.slice(1);\n\n            return {...state, messages};\n        }\n        case SHIFT_SUBMISSIONS: {\n            let submissionQueue = state.submissionQueue.slice(1);\n\n            window.localStorage.setItem(\"submissions\", JSON.stringify(submissionQueue));\n\n            return {...state, submissionQueue};\n        }\n        case UPDATE_DROP: {\n            let {selectedEvent, selectedNode} = state,\n                {uid, quantity, count, ignored} = action.payload,\n                storageKey = '' + selectedEvent + '_' + selectedNode,\n                nodeDrops = state.eventData.node_drops.filter(nodeDrop => nodeDrop.event_node_uid === selectedNode),\n                initialDrop = state.submissionDrops.filter(submissionDrop =>\n                    submissionDrop.uid === uid\n                    && submissionDrop.quantity === quantity\n                ).shift(),\n                submissionDrops = nodeDrops.map(nodeDrop => {\n                    let submissionDrop = state.submissionDrops.filter(submissionDrop =>\n                        submissionDrop.uid === nodeDrop.uid\n                        && submissionDrop.quantity === nodeDrop.quantity\n                    ).shift();\n\n                    if (submissionDrop === undefined)\n                        submissionDrop = {\n                            uid: nodeDrop.uid,\n                            quantity: nodeDrop.quantity,\n                            count: 0,\n                            ignored: false\n                        };\n\n                    if (submissionDrop.uid === uid && submissionDrop.quantity === quantity)\n                        submissionDrop = {\n                            ...submissionDrop,\n                            count,\n                            ignored\n                        };\n\n                    return submissionDrop;\n                }),\n                newState = {...state, submissionDrops};\n\n            window.localStorage.setItem(storageKey, JSON.stringify(submissionDrops));\n\n            if (state.selectedDropUid !== uid || state.selectedDropQuantity !== quantity) {\n                newState.selectedDropUid = uid;\n                newState.selectedDropQuantity = quantity;\n                newState.selectedDropInitialCount = initialDrop ? initialDrop.count : 0;\n            }\n\n            return newState;\n        }\n        case UPDATE_LOADING:\n            return {...state, isLoading: action.payload};\n        case UPDATE_SETTING: {\n            let newState = {...state},\n                newSettings = {...newState.settings};\n\n            newSettings[action.payload.property] = action.payload.value;\n            newState.settings = newSettings;\n            window.localStorage.setItem(\"settings\", JSON.stringify(newSettings));\n\n            return newState;\n        }\n        default: {\n            if (state === undefined)\n                return {\n                    settings: {}\n                };\n\n            return state;\n        }\n    }\n}","import React from \"react\";\nimport {Provider} from \"react-redux\";\nimport {applyMiddleware} from \"redux\";\nimport {createStore} from \"redux-dynamic-modules-core\";\nimport {DynamicModuleLoader} from \"redux-dynamic-modules-react\";\nimport thunkMiddleware from 'redux-thunk';\nimport DropSerializer from \"./components/DropSerializer\";\nimport getDropSerializerModule from \"./redux/drop-serializer-module\";\nimport \"./sass/app.scss\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.store = createStore(\n            {},\n            [\n                applyMiddleware(thunkMiddleware)\n            ]\n        );\n    }\n\n    render() {\n        return <div id={\"app\"}>\n            <Provider store={this.store}>\n                <DynamicModuleLoader modules={[getDropSerializerModule()]}>\n                    <DropSerializer options={{\n                        domain: \"https://submissions.atlasacademy.io\",\n                        enableEventSelector: true\n                    }}/>\n                </DynamicModuleLoader>\n            </Provider>\n        </div>;\n    }\n}\n\nexport default App;\n","import dropSerializerReducer from './drop-serializer-reducer';\n\nexport default function getDropSerializerModule() {\n    return {\n        // Unique id of the module\n        id: \"drop-serializer\",\n        // Maps the Store key to the reducer\n        reducerMap: {\n            dropSerializer: dropSerializerReducer,\n        }\n    };\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {\n    faBan,\n    faCheck,\n    faCog,\n    faCopy,\n    faFilter,\n    faMinus,\n    faSpinner,\n    faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport {faDiscord, faGithub} from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(faBan);\nlibrary.add(faCheck);\nlibrary.add(faCog);\nlibrary.add(faCopy);\nlibrary.add(faFilter);\nlibrary.add(faMinus);\nlibrary.add(faSpinner);\nlibrary.add(faTrashAlt);\nlibrary.add(faDiscord);\nlibrary.add(faGithub);\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}