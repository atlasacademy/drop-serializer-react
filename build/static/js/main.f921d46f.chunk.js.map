{"version":3,"sources":["lib/Messages.js","components/Alerts.js","lib/Storage.js","components/Drop.js","lib/SubmissionsApi.js","lib/SubmissionsQueue.js","components/DropBonus.js","components/Node.js","lib/Query.js","components/Event.js","components/Setting.js","components/App.js","serviceWorker.js","index.js"],"names":["listener","Messages","type","message","callback","Alerts","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","alerts","push","bind","assertThisInitialized","registerListener","map","alert","key","react_default","a","createElement","Alert_default","variant","className","_this2","JSON","parse","stringify","setState","setTimeout","shiftAlerts","slice","Component","events","EventEmitter","setMaxListeners","Storage","eventUid","eventNodeUid","makeNodeSessionKey","window","localStorage","removeItem","submissions","getSubmissions","length","shift","nodeSession","getItem","settingsRaw","settings","extend","click","columns","vibrate","width","dropUid","dropQuantity","getNodeSession","defaultNodeDrop","uid","quantity","count","ignored","nodeDrop","filter","undefined","submissionsRaw","submitterName","on","submission","setItem","removeListener","filteredSession","sessionNodeDrop","property","value","getSettings","emit","name","Drop","increment","interval","intervalSkips","iterator","pointerLeash","pointerX","pointerY","running","timer","windowLeash","windowListener","windowPosition","sessionDrop","getSessionNodeDrop","event_uid","event_node_uid","showFilter","active","settingsListener","refreshSettings","onUpdateSettings","DropIcon","draggable","src","drop","image","alt","onMouseDown","e","startIncrement","onMouseMove","checkMouseMove","onMouseOut","stopIncrement","onMouseUp","doMouseUp","DropIndicator","DropQuantity","DropInput","Form_default","Control","onChange","changeCount","DropDecrement","Button_default","block","size","index_es","icon","DropToggle","onClick","toggleIgnored","event","setCount","target","x","clientX","y","clientY","w","Math","abs","h","removeUpdateSettingsListener","amount","_this3","doIncrement","parseInt","isNaN","setSessionNodeDrop","t","setInterval","scrollY","addEventListener","clearInterval","removeEventListener","React","hostname","XMLHttpRequest","require","SubmissionsApi","xhr","onload","submittableEvents","responseText","submittable","open","send","successCallback","failureCallback","urlEncodedData","urlEncodedDataPairs","encodeURIComponent","submitter","drops","forEach","field","Number","join","replace","status","result","onerror","setRequestHeader","pending","SubmissionsQueue","getNextSubmission","isMissingDropsCallback","hasQueued","queueSubmission","sendNext","success","clearTimeout","postSubmission","receipt","shiftSubmissions","missing_drops","scheduleNext","code","DropBonus","as","Node","dropRefs","clickSound","Howl","renderDrops","Row_default","Col_default","toggleFilter","submit","nodeDrops","i","components_DropBonus","notifyClick","ref","input","src_components_Drop","clear","destroy","play","navigator","_this4","payload","node","getSubmitterName","getState","onOutdated","clearNodeSession","clearDrops","Query","param","urlParams","has","get","params","set","delete","update","toString","query","newurl","location","protocol","host","pathname","history","replaceState","path","URLSearchParams","search","Event","selectNode","nodeKey","nodeRef","extractNode","getNode","nodes","pop","node_drops","sort","b","dropUids","unique","indexOf","selectedNode","renderNodeSelector","renderNode","src_components_Node","options","concat","setNode","Setting","show","submitter_name","Modal_default","onHide","handleClose","Header","closeButton","Title","Body","Group","controlId","Label","setSubmitterName","submitterInput","setAppWidth","setNumberOfColumns","setPlayClick","disabled","setVibrate","focus","setSettings","App","selectEvent","isLoadingEvents","isLoadingEvent","eventsData","eventData","selectedEvent","getEvent","getEvents","href","setting","toggle","rel","src_components_Alerts","renderEventSelector","renderEvent","renderSettings","renderLoading","src_components_Event","selected","reloadEvent","spin","_this5","components_Setting","_this6","setEvent","Boolean","match","library","add","faBan","faCheck","faCog","faCopy","faFilter","faMinus","faSpinner","faTrashAlt","faDiscord","faGithub","ReactDOM","render","src_components_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f921d46f.chunk.js","sourcesContent":["let listener;\n\nclass Messages {\n\n    static push(type, message) {\n        listener(type, message);\n    }\n\n    static registerListener(callback) {\n        listener = callback;\n    }\n\n}\n\nexport default Messages;","import React, {Component} from 'react';\nimport Alert from \"react-bootstrap/Alert\";\nimport \"./Alerts.css\";\nimport Messages from \"../lib/Messages\";\n\nclass Alerts extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            alerts: []\n        };\n\n        this.push = this.push.bind(this);\n        Messages.registerListener(this.push);\n    }\n\n    render() {\n        let alerts = this.state.alerts.map((alert, key) => {\n            return <Alert key={key} variant={alert.type}>{alert.message}</Alert>;\n        });\n\n        return (\n            <div className=\"Alerts\">\n                {alerts}\n            </div>\n        );\n    }\n\n    push(type, message) {\n        let alerts = JSON.parse(JSON.stringify(this.state.alerts));\n\n        alerts.push({\n            type: type,\n            message: message\n        });\n\n        this.setState({\n            alerts: alerts\n        });\n\n        setTimeout(() => {\n            this.shiftAlerts();\n        }, 5000);\n    }\n\n    shiftAlerts() {\n        let alerts = JSON.parse(JSON.stringify(this.state.alerts));\n\n        this.setState({\n            alerts: alerts.slice(1)\n        });\n    }\n}\n\nexport default Alerts;\n","import EventEmitter from \"events\";\nimport extend from \"extend\";\n\nconst events = new EventEmitter();\nevents.setMaxListeners(50);\n\nclass Storage {\n\n    static clearNodeSession(eventUid, eventNodeUid) {\n        let key = Storage.makeNodeSessionKey(eventUid, eventNodeUid);\n\n        window.localStorage.removeItem(key);\n    }\n\n    static getNextSubmission() {\n        let submissions = Storage.getSubmissions();\n\n        if (submissions.length === 0)\n            return null;\n\n        return submissions.shift();\n    }\n\n    static getNodeSession(eventUid, eventNodeUid) {\n        let key = Storage.makeNodeSessionKey(eventUid, eventNodeUid),\n            nodeSession = window.localStorage.getItem(key);\n\n        if (nodeSession === null)\n            return [];\n\n        return JSON.parse(nodeSession);\n    }\n\n    static getSettings() {\n        let settingsRaw = window.localStorage.getItem(\"settings\"),\n            settings = settingsRaw === null ? {} : JSON.parse(settingsRaw);\n\n        return extend({\n            click: true,\n            columns: \"columns_auto\",\n            vibrate: true,\n            width: \"width_full\"\n        }, settings);\n    }\n\n    static getSessionNodeDrop(eventUid, eventNodeUid, dropUid, dropQuantity) {\n        let nodeSession = Storage.getNodeSession(eventUid, eventNodeUid),\n            defaultNodeDrop = {\n                uid: dropUid,\n                quantity: dropQuantity,\n                count: 0,\n                ignored: false\n            };\n\n        let nodeDrop = nodeSession.filter(nodeDrop => {\n            return nodeDrop.uid === dropUid\n                && nodeDrop.quantity === dropQuantity;\n        }).shift();\n\n        if (nodeDrop === undefined)\n            return defaultNodeDrop;\n\n        return nodeDrop;\n    }\n\n    static getSubmissions() {\n        let submissionsRaw = window.localStorage.getItem(\"submissions\");\n\n        return submissionsRaw === null ? [] : JSON.parse(submissionsRaw);\n    }\n\n    static getSubmitterName() {\n        let submitterName = window.localStorage.getItem(\"submitter_name\");\n\n        return submitterName === null ? \"\" : submitterName;\n    }\n\n    static makeNodeSessionKey(eventUid, eventNodeUid) {\n        return \"event_\" + eventUid + \"_node_\" + eventNodeUid;\n    }\n\n    static onUpdateSettings(listener) {\n        events.on(\"update_settings\", listener);\n    }\n\n    static queueSubmission(submission) {\n        let submissions = Storage.getSubmissions();\n\n        submissions.push(submission);\n\n        window.localStorage.setItem(\"submissions\", JSON.stringify(submissions));\n    }\n\n    static removeUpdateSettingsListener(listener) {\n        events.removeListener(\"update_settings\", listener);\n    }\n\n    static setSessionNodeDrop(eventUid, eventNodeUid, dropUid, dropQuantity, count, ignored) {\n        let key = Storage.makeNodeSessionKey(eventUid, eventNodeUid),\n            nodeSession = Storage.getNodeSession(eventUid, eventNodeUid),\n            filteredSession = nodeSession.filter(sessionNodeDrop => {\n                return sessionNodeDrop.uid !== dropUid\n                    || sessionNodeDrop.quantity !== dropQuantity;\n            });\n\n        filteredSession.push({\n            uid: dropUid,\n            quantity: dropQuantity,\n            count: count,\n            ignored: ignored\n        });\n\n        window.localStorage.setItem(key, JSON.stringify(filteredSession));\n    }\n\n    static setSettings(property, value) {\n        let settings = Storage.getSettings();\n        settings[property] = value;\n\n        window.localStorage.setItem(\"settings\", JSON.stringify(settings));\n        events.emit(\"update_settings\");\n    }\n\n    static setSubmitterName(name) {\n        window.localStorage.setItem(\"submitter_name\", name);\n    }\n\n    static shiftSubmissions() {\n        let submissions = Storage.getSubmissions().slice(1);\n\n        window.localStorage.setItem(\"submissions\", JSON.stringify(submissions));\n    }\n\n}\n\nexport default Storage;","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport Storage from \"../lib/Storage\";\nimport \"./Drop.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Drop extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.increment = {\n            interval: 250,\n            intervalSkips: 3,\n            iterator: 0,\n            pointerLeash: 10,\n            pointerX: null,\n            pointerY: null,\n            running: false,\n            timer: null,\n            windowLeash: 10,\n            windowListener: null,\n            windowPosition: null\n        };\n\n        let sessionDrop = Storage.getSessionNodeDrop(\n            props.nodeDrop.event_uid,\n            props.nodeDrop.event_node_uid,\n            props.nodeDrop.uid,\n            props.nodeDrop.quantity\n        );\n\n        sessionDrop.showFilter = false;\n        sessionDrop.active = false;\n        sessionDrop.columns = Storage.getSettings().columns;\n\n        this.state = sessionDrop;\n        this.settingsListener = (() => {\n            this.refreshSettings();\n        });\n        Storage.onUpdateSettings(this.settingsListener);\n    }\n\n    render() {\n        let columns = \" \" + this.state.columns,\n            ignored = this.state.ignored ? \" ignored\" : \"\",\n            showFilter = this.state.showFilter ? \" showFilter\" : \"\",\n            active = this.state.active ? \" active\" : \"\",\n            DropIcon = (\n                <img className=\"DropIcon\" draggable=\"false\"\n                     src={this.props.drop.image}\n                     alt={this.props.drop.name}\n                     onMouseDown={(e) => this.startIncrement(e, 1)}\n                     onMouseMove={(e) => this.checkMouseMove(e)}\n                     onMouseOut={(e) => this.stopIncrement()}\n                     onMouseUp={(e) => this.doMouseUp(1)}/>\n            ),\n            DropIndicator = <span className=\"DropIndicator\">+</span>,\n            DropQuantity = (\n                this.props.nodeDrop.quantity > 1\n                    ? <span className=\"DropQuantity\">{this.props.nodeDrop.quantity}</span>\n                    : \"\"\n            ),\n            DropInput = (\n                <Form.Control type=\"text\"\n                              className=\"DropInput form-control form-control-sm\"\n                              value={this.state.count}\n                              onChange={(e) => this.changeCount(e)}/>\n            ),\n            DropDecrement = (\n                <Button variant=\"primary\" block size=\"sm\"\n                        className=\"DropDecrement\"\n                        onMouseDown={(e) => this.startIncrement(e, -1)}\n                        onMouseMove={(e) => this.checkMouseMove(e)}\n                        onMouseOut={(e) => this.stopIncrement()}\n                        onMouseUp={(e) => this.doMouseUp(-1)}>\n                    <FontAwesomeIcon icon=\"minus\"/>\n                </Button>\n            ),\n            DropToggle = (\n                <div className=\"DropToggle\" onClick={(e) => this.toggleIgnored()}>\n                    <FontAwesomeIcon className=\"DropToggleIcon\"\n                                     icon={this.state.ignored ? \"ban\" : \"check\"}/>\n                </div>\n            );\n\n        return (\n            <div className={\"Drop\" + columns + ignored + showFilter + active}>\n                <div className=\"DropBorder\">\n                    <div className=\"DropContent\">\n                        <div className=\"DropIconBox\">\n                            {DropIcon}\n                            {DropIndicator}\n                            {DropQuantity}\n                        </div>\n                        {DropInput}\n                        {DropDecrement}\n                    </div>\n                    {DropToggle}\n                </div>\n            </div>\n        );\n    }\n\n    changeCount(event) {\n        this.setCount(event.target.value);\n    }\n\n    checkMouseMove(e) {\n        if (!this.increment.running)\n            return;\n\n        let x = e.clientX,\n            y = e.clientY,\n            w = Math.abs(x - this.increment.pointerX),\n            h = Math.abs(y - this.increment.pointerY);\n\n        if (w > this.increment.pointerLeash || h > this.increment.pointerLeash)\n            this.stopIncrement();\n    }\n\n    clear() {\n        this.setCount(0);\n    }\n\n    destroy() {\n        Storage.removeUpdateSettingsListener(this.settingsListener);\n    }\n\n    doIncrement(amount) {\n        this.setCount(0 + this.state.count + amount);\n\n        this.setState({active: true});\n        setTimeout(() => {\n            this.setState({active: false});\n        }, 50);\n\n        if (this.props.onClick)\n            this.props.onClick();\n    }\n\n    doMouseUp(amount) {\n        if (!this.increment.running)\n            return;\n\n        if (this.increment.iterator <= this.increment.intervalSkips)\n            this.doIncrement(amount);\n\n        this.stopIncrement();\n    }\n\n    getState() {\n        return {\n            uid: this.state.uid,\n            quantity: this.state.quantity,\n            count: this.state.count,\n            ignored: this.state.ignored\n        };\n    }\n\n    refreshSettings() {\n        this.setState({\n            columns: Storage.getSettings().columns\n        });\n    }\n\n    setCount(value) {\n        if (typeof value === \"string\" && value !== \"\")\n            value = parseInt(value);\n        if (isNaN(value) || value < 0)\n            value = 0;\n\n        Storage.setSessionNodeDrop(\n            this.props.nodeDrop.event_uid,\n            this.props.nodeDrop.event_node_uid,\n            this.props.nodeDrop.uid,\n            this.props.nodeDrop.quantity,\n            value,\n            this.state.ignored\n        );\n\n        this.setState(Storage.getSessionNodeDrop(\n            this.props.nodeDrop.event_uid,\n            this.props.nodeDrop.event_node_uid,\n            this.props.nodeDrop.uid,\n            this.props.nodeDrop.quantity\n        ));\n    }\n\n    startIncrement(e, amount) {\n        this.stopIncrement();\n\n        let t = this;\n        this.increment.iterator = 0;\n        this.increment.pointerX = e.clientX;\n        this.increment.pointerY = e.clientY;\n\n        this.increment.timer = setInterval(function () {\n            if (t.increment.iterator > t.increment.intervalSkips)\n                t.doIncrement(amount);\n\n            t.increment.iterator++;\n        }, this.increment.interval);\n        this.increment.windowPosition = window.scrollY;\n        this.increment.windowListener = function (e) {\n            let diff = Math.abs(window.scrollY - t.increment.windowPosition);\n\n            if (diff > t.increment.windowLeash)\n                t.stopIncrement();\n        };\n        window.addEventListener(\"scroll\", this.increment.windowListener);\n        this.increment.running = true;\n    }\n\n    stopIncrement() {\n        if (!this.increment.running)\n            return;\n\n        clearInterval(this.increment.timer);\n        window.removeEventListener(\"scroll\", this.increment.windowListener);\n        this.increment.timer = null;\n        this.increment.windowListener = null;\n        this.increment.running = false;\n    }\n\n    toggleFilter() {\n        this.setState({\n            showFilter: !this.state.showFilter\n        });\n    }\n\n    toggleIgnored() {\n        Storage.setSessionNodeDrop(\n            this.props.nodeDrop.event_uid,\n            this.props.nodeDrop.event_node_uid,\n            this.props.nodeDrop.uid,\n            this.props.nodeDrop.quantity,\n            0,\n            !this.state.ignored\n        );\n\n        this.setState(Storage.getSessionNodeDrop(\n            this.props.nodeDrop.event_uid,\n            this.props.nodeDrop.event_node_uid,\n            this.props.nodeDrop.uid,\n            this.props.nodeDrop.quantity\n        ));\n    }\n}\n\nexport default Drop;","const hostname = \"https://submissions.atlasacademy.io\";\n// const hostname = \"http://submissions.test.atlasacademy.io\";\nconst XMLHttpRequest = require(\"xmlhttprequest-ssl\").XMLHttpRequest;\n\nclass SubmissionsApi {\n\n    static getEvents(callback) {\n        let xhr = new XMLHttpRequest();\n        xhr.onload = function () {\n            let events = JSON.parse(xhr.responseText),\n                submittableEvents = events.filter(event => {\n                    return event.submittable;\n                });\n\n            callback(submittableEvents);\n        };\n        xhr.open(\"GET\", hostname + \"/event\");\n        xhr.send();\n    }\n\n    static getEvent(uid, callback) {\n        let xhr = new XMLHttpRequest();\n        xhr.onload = function () {\n            let event = JSON.parse(xhr.responseText);\n\n            if (!event.submittable)\n                return;\n\n            callback(event);\n        };\n        xhr.open(\"GET\", hostname + \"/event/\" + uid);\n        xhr.send();\n    }\n\n    static postSubmission(submission, successCallback, failureCallback) {\n        let xhr = new XMLHttpRequest(),\n            urlEncodedData,\n            urlEncodedDataPairs = [];\n\n        urlEncodedDataPairs.push(encodeURIComponent(\"event_uid\") + '=' + encodeURIComponent(submission.event_uid));\n        urlEncodedDataPairs.push(encodeURIComponent(\"event_node_uid\") + '=' + encodeURIComponent(submission.event_node_uid));\n        urlEncodedDataPairs.push(encodeURIComponent(\"submitter\") + '=' + encodeURIComponent(submission.submitter));\n        submission.drops.forEach((drop, key) => {\n            for (let field in drop) {\n                let value = typeof drop[field] === \"boolean\" ? Number(drop[field]) : encodeURIComponent(drop[field]);\n                urlEncodedDataPairs.push(\n                    encodeURIComponent(\"drops[\" + key + \"][\" + field + \"]\")\n                    + '='\n                    + value\n                );\n            }\n        });\n\n        urlEncodedData = urlEncodedDataPairs.join('&').replace(/%20/g, '+');\n\n        xhr.onload = function () {\n            if (xhr.status === 200) {\n                let result = JSON.parse(xhr.responseText);\n\n                successCallback(result);\n            } else {\n                failureCallback(xhr.status);\n            }\n        };\n\n        xhr.onerror = function () {\n            failureCallback(xhr.status);\n        };\n\n        xhr.open(\"POST\", hostname + \"/submit/run\");\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n        xhr.send(urlEncodedData);\n    }\n\n}\n\nexport default SubmissionsApi;","import Storage from \"./Storage\";\nimport SubmissionsApi from \"./SubmissionsApi\";\nimport Messages from \"./Messages\";\n\nconst successDelay = 2500;\nconst failureDelay = 20000;\nlet pending = false,\n    timer = null;\n\nclass SubmissionsQueue {\n\n    static hasQueued() {\n        let submission = Storage.getNextSubmission();\n\n        return submission !== null;\n    }\n\n    static push(submission, isMissingDropsCallback) {\n        let hasQueued = SubmissionsQueue.hasQueued();\n        Storage.queueSubmission(submission);\n\n        if (!hasQueued)\n            SubmissionsQueue.sendNext(isMissingDropsCallback);\n    }\n\n    static scheduleNext(success) {\n        if (pending)\n            return;\n\n        if (!SubmissionsQueue.hasQueued())\n            return;\n\n        pending = true;\n        timer = setTimeout(() => {\n            SubmissionsQueue.sendNext();\n        }, success ? successDelay : failureDelay);\n    }\n\n    static sendNext(isMissingDropsCallback) {\n        if (pending)\n            clearTimeout(timer);\n        pending = false;\n        timer = null;\n\n        let submission = Storage.getNextSubmission();\n\n        if (submission === null) {\n            SubmissionsQueue.scheduleNext(false);\n            return;\n        }\n\n        SubmissionsApi.postSubmission(submission, (result) => {\n            Messages.push(\"success\", \"Created new submission: \" + result.receipt);\n            Storage.shiftSubmissions();\n\n            if (result.missing_drops && isMissingDropsCallback)\n                isMissingDropsCallback();\n\n            SubmissionsQueue.scheduleNext(true);\n        }, (code) => {\n            if (code === 422) {\n                Messages.push(\"danger\", \"Invalid submission. Removing from queue.\");\n                Storage.shiftSubmissions();\n            }\n\n            SubmissionsQueue.scheduleNext(false);\n        });\n    }\n\n}\n\nexport default SubmissionsQueue;","import React from 'react';\nimport Drop from './Drop';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nclass DropBonus extends Drop {\n\n    render() {\n        let columns = \" \" + this.state.columns,\n            active = this.state.active ? \" active\" : \"\",\n            DropIcon = (\n                <img className=\"DropIcon\" draggable=\"false\"\n                     src={this.props.drop.image}\n                     alt={this.props.drop.name}\n                     onMouseDown={(e) => this.startIncrement(e, 1)}\n                     onMouseMove={(e) => this.checkMouseMove(e)}\n                     onMouseOut={(e) => this.stopIncrement()}\n                     onMouseUp={(e) => this.doMouseUp(1)}/>\n            ),\n            DropIndicator = <span className=\"DropIndicator\">BONUS%</span>,\n            DropInput = (\n                <Form.Control as=\"select\"\n                              size=\"sm\"\n                              className=\"DropInput\"\n                              value={this.state.count}\n                              onChange={(e) => this.changeCount(e)}>\n                    <option value={0}>0%</option>\n                    <option value={10}>10%</option>\n                    <option value={20}>20%</option>\n                    <option value={30}>30%</option>\n                    <option value={40}>40%</option>\n                    <option value={50}>50%</option>\n                    <option value={60}>60%</option>\n                    <option value={70}>70%</option>\n                    <option value={80}>80%</option>\n                    <option value={90}>90%</option>\n                    <option value={100}>100%</option>\n                </Form.Control>\n            ),\n            DropDecrement = (\n                <Button variant=\"primary\" block size=\"sm\"\n                        className=\"DropDecrement\"\n                        onMouseDown={(e) => this.startIncrement(e, -1)}\n                        onMouseMove={(e) => this.checkMouseMove(e)}\n                        onMouseOut={(e) => this.stopIncrement()}\n                        onMouseUp={(e) => this.doMouseUp(-1)}>\n                    <FontAwesomeIcon icon=\"minus\"/>\n                </Button>\n            ),\n            DropToggle = (\n                <div className=\"DropToggle\" onClick={(e) => this.toggleIgnored()}>\n                    <FontAwesomeIcon className=\"DropToggleIcon\"\n                                     icon={this.state.ignored ? \"ban\" : \"check\"}/>\n                </div>\n            );\n\n        return (\n            <div className={\"Drop DropBonus\" + columns + active}>\n                <div className=\"DropBorder\">\n                    <div className=\"DropContent\">\n                        <div className=\"DropIconBox\">\n                            {DropIcon}\n                            {DropIndicator}\n                        </div>\n                        {DropInput}\n                        {DropDecrement}\n                    </div>\n                    {DropToggle}\n                </div>\n            </div>\n        );\n    }\n\n    clear() {\n        // Do Nothing\n    }\n\n    doIncrement(amount) {\n        var result = 0 + this.state.count + (amount * 10);\n\n        if (result > 100)\n            result = 100;\n\n        this.setCount(result);\n\n        this.setState({active: true});\n        setTimeout(() => {\n            this.setState({active: false});\n        }, 50);\n\n        if (this.props.onClick)\n            this.props.onClick();\n    }\n\n}\n\nexport default DropBonus;\n","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport Drop from \"./Drop\";\nimport \"./Node.css\";\nimport Storage from \"../lib/Storage\";\nimport Button from \"react-bootstrap/Button\";\nimport SubmissionsQueue from \"../lib/SubmissionsQueue\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {Howl} from 'howler';\nimport DropBonus from \"./DropBonus\";\n\nclass Node extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dropRefs = [];\n        this.clickSound = new Howl({\n            src: \"./sounds/click.mp3\"\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"Node\">\n                <div className=\"DropsContainer\">\n                    {this.renderDrops()}\n                </div>\n                <Row>\n                    <Col>\n                        <Button variant=\"primary\" block onClick={(e) => this.toggleFilter()}>\n                            <FontAwesomeIcon icon=\"filter\"/> Toggle Filter\n                        </Button>\n                    </Col>\n                    <Col>\n                        <Button variant=\"success\" block onClick={(e) => this.submit()}>\n                            <FontAwesomeIcon icon=\"copy\"/> Submit Run\n                        </Button>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n    renderDrops() {\n        return this.props.nodeDrops.map((nodeDrop, i) => {\n            let drop = this.props.drops.filter(drop => {\n                return drop.uid === nodeDrop.uid;\n            }).shift();\n\n            if (drop.type === \"Bonus Rate-Up\")\n                return <DropBonus key={i}\n                                  nodeDrop={nodeDrop}\n                                  drop={drop}\n                                  onClick={() => {\n                                      this.notifyClick();\n                                  }}\n                                  ref={input => {\n                                      this.dropRefs.push(input);\n                                  }}/>\n            else\n                return <Drop key={i}\n                             nodeDrop={nodeDrop}\n                             drop={drop}\n                             onClick={() => {\n                                 this.notifyClick();\n                             }}\n                             ref={input => {\n                                 this.dropRefs.push(input);\n                             }}/>\n        });\n    }\n\n    clearDrops() {\n        this.dropRefs.forEach(drop => {\n            drop.clear();\n        });\n    }\n\n    destroy() {\n        this.dropRefs.forEach(drop => {\n            drop.destroy();\n        });\n    }\n\n    notifyClick() {\n        if (Storage.getSettings().click)\n            this.clickSound.play();\n\n        if (Storage.getSettings().vibrate && window.navigator.vibrate)\n            window.navigator.vibrate(100);\n    }\n\n    toggleFilter() {\n        this.dropRefs.forEach(drop => {\n            drop.toggleFilter();\n        });\n    }\n\n    submit() {\n        let payload = {\n            event_uid: this.props.node.event_uid,\n            event_node_uid: this.props.node.uid,\n            submitter: Storage.getSubmitterName(),\n            drops: this.dropRefs.map(drop => {\n                return drop.getState();\n            })\n        };\n\n        SubmissionsQueue.push(payload, () => {\n            if (this.props.onOutdated)\n                this.props.onOutdated();\n        });\n        Storage.clearNodeSession(this.props.node.event_uid, this.props.node.uid);\n        this.clearDrops();\n    }\n}\n\nexport default Node;","class Query {\n\n    static get(param) {\n        return Query.urlParams().has(param) ? Query.urlParams().get(param) : \"\";\n    }\n\n    static getEvent() {\n        return Query.get(\"event\");\n    }\n\n    static getNode() {\n        return Query.get(\"node\");\n    }\n\n    static setEvent(uid) {\n        let params = Query.urlParams();\n\n        if (uid)\n            params.set(\"event\", uid);\n        else\n            params.delete(\"event\");\n\n        params.delete(\"node\");\n        Query.update(\"?\" + params.toString());\n    }\n\n    static setNode(uid) {\n        let params = Query.urlParams();\n\n        if (uid)\n            params.set(\"node\", uid);\n        else\n            params.delete(\"node\");\n\n        Query.update(\"?\" + params.toString());\n    }\n\n    static update(query) {\n        let newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname + query;\n        window.history.replaceState({path: newurl}, '', newurl);\n    }\n\n    static urlParams() {\n        return new URLSearchParams(window.location.search);\n    }\n\n}\n\nexport default Query;","import unique from \"array-unique\";\nimport React from 'react';\nimport Node from \"./Node\";\nimport Query from \"../lib/Query\";\nimport \"./Event.css\";\nimport Form from \"react-bootstrap/Form\";\n\nclass Event extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.selectNode = this.selectNode.bind(this);\n\n        this.nodeKey = 0;\n        this.nodeRef = null;\n        this.state = this.extractNode(Query.getNode());\n    }\n\n    extractNode(uid) {\n        let node = this.props.event.nodes.filter(node => {\n                return node.uid === uid;\n            }).pop(),\n            nodeDrops = this.props.event.node_drops.filter(drop => {\n                return drop.event_node_uid === uid;\n            }).sort(((a, b) => {\n                return a.sort - b.sort;\n            })),\n            dropUids = unique(nodeDrops.map(drop => {\n                return drop.uid;\n            })),\n            drops = this.props.event.drops.filter(drop => {\n                return dropUids.indexOf(drop.uid) !== -1;\n            });\n\n        return {\n            selectedNode: uid,\n            node: node,\n            nodeDrops: nodeDrops,\n            drops: drops\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"Event\">\n                {this.renderNodeSelector()}\n                {this.renderNode()}\n            </div>\n        );\n    }\n\n    renderNode() {\n        if (!this.state.selectedNode)\n            return;\n\n        return <Node key={this.nodeKey}\n                     node={this.state.node}\n                     nodeDrops={this.state.nodeDrops}\n                     drops={this.state.drops}\n                     onOutdated={this.props.onOutdated}\n                     ref={input => {\n                         this.nodeRef = input;\n                     }}/>\n    }\n\n    renderNodeSelector() {\n        let i = 0,\n            options = [\n                <option key={i++} value={\"\"}>Select a node</option>\n            ].concat(this.props.event.nodes.map(node => {\n                return <option key={i++} value={node.uid}>{node.name}</option>\n            }));\n\n        return (\n            <Form.Control as=\"select\"\n                          className=\"NodeSelector custom-select\"\n                          onChange={this.selectNode}\n                          value={this.state.selectedNode}>\n                {options}\n            </Form.Control>\n        );\n    }\n\n    selectNode(event) {\n        if (this.nodeRef)\n            this.nodeRef.destroy();\n\n        this.nodeKey++;\n        let uid = event.target.value;\n        Query.setNode(uid);\n\n        this.setState(this.extractNode(uid));\n    }\n}\n\nexport default Event;","import React from 'react';\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Storage from \"../lib/Storage\";\n\nclass Setting extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: !Storage.getSubmitterName(),\n            settings: Storage.getSettings(),\n            submitter_name: Storage.getSubmitterName()\n        };\n    }\n\n    render() {\n        return (\n            <Modal show={this.state.show} onHide={e => this.handleClose()}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Settings</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group controlId=\"settingSubmitterName\">\n                        <Form.Label>Submitter Name</Form.Label>\n                        <Form.Control value={this.state.submitter_name}\n                                      onChange={e => this.setSubmitterName(e.target.value)}\n                                      ref={(input) => {\n                                          this.submitterInput = input;\n                                      }}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"settingAppWidth\">\n                        <Form.Label>App Width</Form.Label>\n                        <Form.Control as=\"select\"\n                                      value={this.state.settings.width}\n                                      onChange={e => this.setAppWidth(e.target.value)}>\n                            <option value=\"width_full\">Full Width</option>\n                            <option value=\"width_480\">480px</option>\n                            <option value=\"width_720\">720px</option>\n                            <option value=\"width_1080\">1080p</option>\n                            <option value=\"width_2160\">2160p</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"settingNumberOfColumns\">\n                        <Form.Label>Number of Columns</Form.Label>\n                        <Form.Control as=\"select\"\n                                      value={this.state.settings.columns}\n                                      onChange={e => this.setNumberOfColumns(e.target.value)}>\n                            <option value=\"columns_auto\">Auto</option>\n                            <option value=\"columns_2\">2</option>\n                            <option value=\"columns_4\">4</option>\n                            <option value=\"columns_6\">6</option>\n                            <option value=\"columns_8\">8</option>\n                            <option value=\"columns_12\">12</option>\n                            <option value=\"columns_16\">16</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"settingPlayClick\">\n                        <Form.Label>Play Click</Form.Label>\n                        <Form.Control as=\"select\"\n                                      value={this.state.settings.click ? \"Yes\" : \"No\"}\n                                      onChange={e => this.setPlayClick(e.target.value)}>\n                            <option>Yes</option>\n                            <option>No</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"settingVibrate\">\n                        <Form.Label>Vibrate</Form.Label>\n                        <Form.Control as=\"select\"\n                                      value={this.state.settings.vibrate ? \"Yes\" : \"No\"}\n                                      disabled={!window.navigator.vibrate}\n                                      onChange={e => this.setVibrate(e.target.value)}>\n                            <option>Yes</option>\n                            <option>No</option>\n                        </Form.Control>\n                    </Form.Group>\n                </Modal.Body>\n            </Modal>\n        )\n    }\n\n    componentDidMount() {\n        if (!Storage.getSubmitterName())\n            this.submitterInput.focus();\n    }\n\n    handleClose() {\n        this.setState({show: false});\n    }\n\n    setAppWidth(value) {\n        Storage.setSettings(\"width\", value);\n        this.setState({\n            settings: Storage.getSettings()\n        });\n    }\n\n    setNumberOfColumns(value) {\n        Storage.setSettings(\"columns\", value);\n        this.setState({\n            settings: Storage.getSettings()\n        });\n    }\n\n    setPlayClick(value) {\n        Storage.setSettings(\"click\", value===\"Yes\");\n        this.setState({\n            settings: Storage.getSettings()\n        });\n    }\n\n    setSubmitterName(name) {\n        Storage.setSubmitterName(name);\n        this.setState({\n            \"submitter_name\": Storage.getSubmitterName()\n        });\n    }\n\n    setVibrate(value) {\n        Storage.setSettings(\"vibrate\", value===\"Yes\");\n        this.setState({\n            settings: Storage.getSettings()\n        });\n    }\n\n    toggle() {\n        this.setState({\n            show: !this.state.show\n        });\n    }\n}\n\nexport default Setting;\n","import React, {Component} from 'react';\nimport Alerts from \"./Alerts\";\nimport Button from \"react-bootstrap/Button\";\nimport Event from \"./Event\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Form from \"react-bootstrap/Form\";\nimport Query from \"../lib/Query\";\nimport Setting from \"./Setting\";\nimport SubmissionsApi from \"../lib/SubmissionsApi\";\nimport './App.css';\nimport SubmissionsQueue from \"../lib/SubmissionsQueue\";\nimport Messages from \"../lib/Messages\";\nimport Storage from \"../lib/Storage\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.selectEvent = this.selectEvent.bind(this);\n\n        this.state = {\n            isLoadingEvents: true,\n            isLoadingEvent: false,\n            eventsData: [],\n            eventData: null,\n            selectedEvent: Query.getEvent(),\n            width: Storage.getSettings().width\n        };\n\n        Storage.onUpdateSettings(() => {\n            this.refreshSettings();\n        });\n\n        SubmissionsApi.getEvents(events => {\n            this.setState({\n                isLoadingEvents: false,\n                isLoadingEvent: this.state.selectedEvent.length > 0,\n                eventsData: events\n            });\n\n            if (this.state.selectedEvent.length > 0) {\n                SubmissionsApi.getEvent(this.state.selectedEvent, event => {\n                    this.setState({\n                        isLoadingEvent: false,\n                        eventData: event\n                    });\n                });\n            }\n        });\n\n        SubmissionsQueue.scheduleNext(true);\n    }\n\n    render() {\n        return (\n            <div className={\"App \" + this.state.width}>\n                <div className=\"AppTitle\">\n                    <h1>\n                        Drop Serializer\n                        <small>by <a href=\"https://discord.gg/TKJmuCR\">Atlas Academy</a></small>\n                    </h1>\n                    <Button variant=\"primary\" className=\"AppSettingsToggle\"\n                            onClick={e => this.setting.toggle()}>\n                        <FontAwesomeIcon icon=\"cog\"/>\n                    </Button>\n\n                    <div className=\"AppLinks\">\n                        <a href=\"https://github.com/atlasacademy/drop-serializer-react\"\n                           className=\"text-secondary\"\n                           target=\"_blank\" rel=\"noopener noreferrer author\">\n                            <FontAwesomeIcon icon={['fab', 'github']}/>\n                        </a>\n                        <a href=\"https://discord.gg/TKJmuCR\"\n                           className=\"text-secondary\"\n                           target=\"_blank\" rel=\"noopener noreferrer author\">\n                            <FontAwesomeIcon icon={['fab', 'discord']}/>\n                        </a>\n                    </div>\n                </div>\n\n                <Alerts/>\n                {this.renderEventSelector()}\n                {this.renderEvent()}\n                {this.renderSettings()}\n                {this.renderLoading()}\n            </div>\n        );\n    }\n\n    refreshSettings() {\n        this.setState({\n            width: Storage.getSettings().width\n        });\n    }\n\n    reloadEvent() {\n        Messages.push(\"warning\", \"Event is outdated. Reloading event.\");\n\n        this.setState({\n            isLoadingEvent: true,\n            eventData: null\n        });\n\n        SubmissionsApi.getEvent(this.state.selectedEvent, event => {\n            this.setState({\n                isLoadingEvent: false,\n                eventData: event\n            });\n        });\n    }\n\n    renderEvent() {\n        if (!this.state.selectedEvent || !this.state.eventData)\n            return;\n\n        return <Event event={this.state.eventData}\n                      selected={this.state.selectedEvent}\n                      onOutdated={() => {\n                          this.reloadEvent();\n                      }}/>;\n    }\n\n    renderEventSelector() {\n        if (this.state.isLoadingEvents)\n            return;\n\n        let i = 0,\n            options = [\n                <option key={i++} value={\"\"}>Select a event</option>\n            ].concat(this.state.eventsData.map(event => {\n                return <option key={i++} value={event.uid}>{event.name}</option>\n            }));\n\n        return (\n            <Form.Control as=\"select\"\n                          className=\"EventSelector\"\n                          onChange={this.selectEvent}\n                          value={this.state.selectedEvent}>\n                {options}\n            </Form.Control>\n        );\n    }\n\n    renderLoading() {\n        if (this.state.isLoadingEvents || this.state.isLoadingEvent)\n            return (\n                <div className=\"AppLoading\">\n                    <div className=\"AppLoadingContent\">\n                        <FontAwesomeIcon icon=\"spinner\" spin/>\n                    </div>\n                </div>\n            );\n    }\n\n    renderSettings() {\n        return (\n            <Setting ref={(input) => {\n                this.setting = input;\n            }} onChange={() => {\n                this.refreshSettings();\n            }}/>\n        );\n    }\n\n    selectEvent(event) {\n        let uid = event.target.value;\n\n        Query.setEvent(uid);\n        this.setState({\n            isLoadingEvent: false,\n            eventData: null,\n            selectedEvent: uid\n        });\n\n        if (!uid)\n            return;\n\n        this.setState({\n            isLoadingEvent: true\n        });\n\n        SubmissionsApi.getEvent(uid, event => {\n            this.setState({\n                isLoadingEvent: false,\n                eventData: event\n            });\n        })\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faBan, faCheck, faCog, faCopy, faFilter, faMinus, faSpinner, faTrashAlt} from '@fortawesome/free-solid-svg-icons';\nimport {faDiscord, faGithub} from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(faBan);\nlibrary.add(faCheck);\nlibrary.add(faCog);\nlibrary.add(faCopy);\nlibrary.add(faFilter);\nlibrary.add(faMinus);\nlibrary.add(faSpinner);\nlibrary.add(faTrashAlt);\nlibrary.add(faDiscord);\nlibrary.add(faGithub);\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}